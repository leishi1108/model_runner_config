[DEFAULT]
workspace = /home/shilei/fbpmx/list_extract/list_extract_for_cost_split_formal_${date}

[project]
actions = generate,evaluate,run
datasets = price_library_data, yunnan_library_data
evaluators = cde_predict, yunnan_cde_predict
stages = price_library_data_test_output, price_library_data_test_sendlabelstudio, price_library_data_test_output_0814

[dataset_raw_yunnan_library_data]
class = ReadExcelDataset
dir = /home/shilei/corpus/cost_split/工程数据分包指导价库_云南建投202408.xlsx

[dataset_yunnan_library_data]
class = MapDataset
input = raw_yunnan_library_data
expression = exec('import re; import uuid') or {"id": str(x["uid"]), "item_id": uuid.uuid4().hex, "item_name": x["caption"], "item_feature": "", "upper_item_name": "", "pid": "云南建设202408"}
keep_exists = True

[dataset_yunnan_library_data_test_trans]
class = MapDataset
input = yunnan_library_data
expression = exec('import re; import uuid') or { "project_id": x["pid"],
    "指导价部位": ",".join(map(str, x["yunnan_tjqd2_score"]["group"]+x["yunnan_tjqd2_score"]["building"]+x["yunnan_tjqd2_score"]["floor"]+x["yunnan_tjqd2_score"]["section"]+x["yunnan_tjqd2_score"]["space"]+x["yunnan_tjqd2_score"]["supporting"]+x["yunnan_tjqd2_score"]["lot"]+x["yunnan_tjqd2_score"]["up-or-down"])),
    "指导价专业": ",".join(map(str, x["yunnan_cde_cost_subject_score"]["specialty"])),
    "指导价分部分项": ",".join(map(str, x["yunnan_cde_cost_subject_score"]["cost-partial"])),
    "指导价部位构件": x["yunnan_tjqd2_score"]["loc-element"],
    "指导价构件": x["yunnan_tjqd2_score"]["element"],
    "指导价构件属性": x["yunnan_tjqd2_score"]["element_attr"],
    "指导价材料": x["yunnan_tjqd2_score"]["material"],
    "指导价材料属性": x["yunnan_tjqd2_score"]["material_attr"],
    "item_name_replace": re.sub(r'[0-9]+', '数', x["item_name"]),
    "item_feature_replace": re.sub(r'[0-9]+', '数', x["item_feature"]),
    "upper_item_name_replace": re.sub(r'[0-9]+', '数', x["upper_item_name"]),
    }
extra_dependencies = evaluator_yunnan_cde_predict
keep_exists = True

[dataset_yunnan_library_data_test_top1]
class = GroupedTopKDataset
input = yunnan_library_data_test_trans
groupby = upper_item_name_replace, item_name_replace, item_feature_replace
topk = 1


[dataset_raw_price_library_data]
class = ReadFileDataset
format = json
dir = /home/shilei/corpus/cost_split/price_library_data.json

[dataset_raw_price_library_data_valid]
class = FilterDataset
input = raw_price_library_data
filters = "type" in x and x["type"] == "清单"

[dataset_price_library_data]
class = MapDataset
input = raw_price_library_data_valid
expression = exec('import re; import uuid') or {"item_id": uuid.uuid4().hex,
    "item_name": x["list_desc_with_upper"],
    "item_feature": x["spec"] if x["spec"] is not None else "",
    "upper_item_name": x["partial_desc_with_upper"]}
keep_exists = True


[dataset_price_library_data_test]
class = FilterDataset
input = price_library_data
filters = "pid" in x and (int(x["pid"][-5:],16) % 10 < 3)

[dataset_price_library_data_test_trans]
class = MapDataset
input = price_library_data_test
expression = exec('import re; import uuid') or { "project_id": x["pid"],
    "指导价部位": ",".join(map(str, x["list_tjqd2_score"]["group"]+x["list_tjqd2_score"]["building"]+x["list_tjqd2_score"]["floor"]+x["list_tjqd2_score"]["section"]+x["list_tjqd2_score"]["space"]+x["list_tjqd2_score"]["supporting"]+x["list_tjqd2_score"]["lot"]+x["list_tjqd2_score"]["up-or-down"])),
    "指导价专业": ",".join(map(str, x["list_cde_cost_subject_score"]["specialty"])),
    "指导价分部分项": ",".join(map(str, x["list_cde_cost_subject_score"]["cost-partial"])),
    "指导价部位构件": x["list_tjqd2_score"]["loc-element"],
    "指导价构件": x["list_tjqd2_score"]["element"],
    "指导价构件属性": x["list_tjqd2_score"]["element_attr"],
    "指导价材料": x["list_tjqd2_score"]["material"],
    "指导价材料属性": x["list_tjqd2_score"]["material_attr"],
    "item_name_replace": re.sub(r'[0-9]+', '数', x["item_name"]),
    "item_feature_replace": re.sub(r'[0-9]+', '数', x["item_feature"]),
    "upper_item_name_replace": re.sub(r'[0-9]+', '数', x["upper_item_name"]),
    }
extra_dependencies = evaluator_cde_predict
keep_exists = True


[dataset_price_library_data_test_for_label]
class = FilterDataset
input = price_library_data_test_trans
; filters = "指导价专业" in x and x["指导价专业"] in ["土建专业", "装修专业", "装修专业,土建专业","土建专业,装修专业"]
filters = "指导价专业" in x and x["指导价专业"] in ["土建专业", "装修专业", "装修专业,土建专业","土建专业,装修专业"] and  "project_id" in x and x["project_id"] in ["62be45a54b34f000074713f4", "61f6077a5c908c0006ab5ff4", "65e7e240b9965f0007681403", "644727e2730dde0007076958", "65533bdf391b8700079a579e", "621cbc1fc637bf000628b97c", "65541cd0391b8700079a57c6", "6627899929c7dd000797a92d", "64771117b1d6150007f8581a", "65e976f9b9965f0007681511", "66974ed67a4ea300073d9e92", "65712fb2bef5640007a1ea02", "632d0430f7525600075a4468", "639296384416d50007ac5da2", "669738bd5422eb000763375e", "630c3432c3dcb1000778c548", "6641aa3ba5cbac0008d6bb67", "64be1539d21c230007743ce3", "656f09b68d23a60007f18088", ]


[dataset_price_library_data_test_top1]
class = GroupedTopKDataset
input = price_library_data_test_for_label
groupby = upper_item_name_replace, item_name_replace, item_feature_replace
topk = 1


[dataset_price_library_data_test_output]
class = MergeDataset
datasets = price_library_data_test_top1, yunnan_library_data_test_top1


[stage_price_library_data_test_output]
class = DatasetExportStage
dataset = price_library_data_test_output
output_fields = project_id, id, upper_item_name, item_name, item_feature, 指导价部位, 指导价专业, 指导价分部分项, 指导价部位构件, 指导价构件, 指导价构件属性, 指导价材料, 指导价材料属性
output_names = 工程ID, 指导价ID, 上级指导价名称, 指导价名称, 指导价特征, 指导价部位, 指导价专业, 指导价分部分项, 指导价部位构件, 指导价构件, 指导价构件属性, 指导价材料, 指导价材料属性
save_res_path = /home/shilei/fbpmx/list_extract/list_extract_for_cost_split_formal_${date}/price_library_data_test_output.xlsx


[dataset_price_library_data_test_for_label_0814]
class = FilterDataset
input = price_library_data_test_trans
filters = "指导价专业" in x and x["指导价专业"] in ["土建专业", "装修专业", "装修专业,土建专业","土建专业,装修专业"] and  "project_id" in x and x["project_id"] in ["63a8af3266503b0007288c53", "64cb7171bc10470007c24a0e", "62aaa8e0c94776000722715b", "64b0b3deec45cd0007e421a9", "644b19467b27eb0007ea094e", "629eeba3e378de000723b39f", "631300baae77be0008bb3646", "64990cc5b65e790007dd9293", "647304a0b0e13e00070487c6", ]

[dataset_price_library_data_test_top1_0814]
class = GroupedTopKDataset
input = price_library_data_test_for_label_0814
groupby = upper_item_name_replace, item_name_replace, item_feature_replace
topk = 1


[stage_price_library_data_test_output_0814]
class = DatasetExportStage
dataset = price_library_data_test_top1_0814
output_fields = project_id, id, upper_item_name, item_name, item_feature, 指导价部位, 指导价专业, 指导价分部分项, 指导价部位构件, 指导价构件, 指导价构件属性, 指导价材料, 指导价材料属性
output_names = 工程ID, 指导价ID, 上级指导价名称, 指导价名称, 指导价特征, 指导价部位, 指导价专业, 指导价分部分项, 指导价部位构件, 指导价构件, 指导价构件属性, 指导价材料, 指导价材料属性
save_res_path = /home/shilei/fbpmx/list_extract/list_extract_for_cost_split_formal_${date}/price_library_data_test_output_0814.xlsx



[dataset_price_library_data_test_output_forlabelstudio]
class = MapDataset
input = price_library_data_test_output
expression = { "item_id": x["item_id"], "content": f"---指导价名称---\n{x['item_name']}\n---指导价特征---\n{x['item_feature']}\n---全路径---\n{x['upper_item_name']}\n"}
extra_dependencies = evaluator_cde_predict
keep_exists = True


[stage_price_library_data_test_sendlabelstudio]
class = ItemLabelStudioStage
dataset = price_library_data_test_output_forlabelstudio
project_id = 125
sendget = send


[evaluator_cde_predict]
class = SimplePredictor
; datasets = price_library_data
datasets = price_library_data_test
models = list_tjqd2, list_cde_cost_subject
num_workers = 8

[model_list_cde]
class = CdeServiceModel
task_type = 清单
item_name_key = item_name
item_feature_key = item_feature
upper_item_name_key = upper_item_name
need_fields = item_name,item_feature,upper_item_name
qps = 50

[model_list_tjqd2]
class = GDETJQD2ServiceModel
task_type = 清单
item_name_key = item_name
item_feature_key = item_feature
upper_item_name_key = upper_item_name
need_fields = item_name,item_feature,upper_item_name

[model_list_cde_cost_subject]
class = CdeServiceModel
task_type = 成本科目
item_name_key = item_name
item_feature_key = upper_item_name
need_fields = item_name, upper_item_name


[evaluator_yunnan_cde_predict]
class = SimplePredictor
datasets = yunnan_library_data
models = yunnan_tjqd2, yunnan_cde_cost_subject
num_workers = 8

[model_yunnan_tjqd2]
class = GDETJQD2ServiceModel
task_type = 清单
item_name_key = item_name
need_fields = item_name

[model_yunnan_cde_cost_subject]
class = CdeServiceModel
task_type = 成本科目
item_name_key = item_name
need_fields = item_name

