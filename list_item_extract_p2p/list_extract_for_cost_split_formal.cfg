[DEFAULT]
workspace = /home/shilei/fbpmx/list_extract/list_extract_for_cost_split_formal_${date}

[project]
actions = generate,evaluate
datasets = price_library_data
evaluators = cde_predict

[dataset_raw_price_library_data]
class = ReadFileDataset
format = json
dir = /home/shilei/corpus/cost_split/price_library_data.json

[dataset_raw_price_library_data_valid]
class = FilterDataset
input = raw_price_library_data
filters = "type" in x and x["type"] == "清单"

[dataset_price_library_data]
class = MapDataset
input = raw_price_library_data_valid
expression = exec('import re; import uuid') or {"item_id": uuid.uuid4().hex,
    "item_name": x["list_desc_with_upper"],
    "item_feature": x["spec"] if x["spec"] is not None else "",
    "upper_item_name": x["partial_desc_with_upper"]}
keep_exists = True


[dataset_price_library_data_test]
class = FilterDataset
input = price_library_data
filters = "pid" in x and (int(x["pid"][-5:],16) % 10 < 3)


[evaluator_cde_predict]
class = SimplePredictor
; datasets = price_library_data
datasets = price_library_data_test
models = list_tjqd2, list_cde_cost_subject
num_workers = 8


[model_list_cde]
class = CdeServiceModel
task_type = 清单
item_name_key = item_name
item_feature_key = item_feature
upper_item_name_key = upper_item_name
need_fields = item_name,item_feature,upper_item_name
qps = 50

[model_list_tjqd2]
class = GDETJQD2ServiceModel
task_type = 清单
item_name_key = item_name
item_feature_key = item_feature
upper_item_name_key = upper_item_name
need_fields = item_name,item_feature,upper_item_name

[model_list_cde_cost_subject]
class = CdeServiceModel
task_type = 成本科目
item_name_key = item_name
item_feature_key = upper_item_name
need_fields = item_name, upper_item_name


