[DEFAULT]
workspace = /home/shilei/fbpmx/list_extract/list_extract_for_cost_split_formal_${date}

[project]
actions = generate,evaluate
datasets = price_library_data
evaluators = cde_predict

[dataset_raw_price_library_data]
class = ReadFileDataset
format = json
dir = /home/shilei/corpus/cost_split/price_library_data.json

[dataset_raw_price_library_data_valid]
class = FilterDataset
input = raw_price_library_data
filters = "type" in x and x["type"] == "清单"

[dataset_price_library_data]
class = MapDataset
input = raw_price_library_data_valid
expression = exec('import re; import uuid') or {"item_id": uuid.uuid4().hex,
    "item_name": x["list_desc_with_upper"],
    "item_feature": x["spec"] if x["spec"] is not None else "",
    "upper_item_name": x["partial_desc_with_upper"],
    "project_name": x["p_desc"] if x["p_desc"] is not None else "",}
keep_exists = True


[evaluator_cde_predict]
class = SimplePredictor
datasets = price_library_data
models = list_cde, list_tjqd2
num_workers = 2


[model_list_cde]
class = CdeServiceModel
task_type = 清单
item_name_key = item_name
item_feature_key = item_feature
upper_item_name_key = upper_item_name
project_name_key = project_name
need_fields = item_name,item_feature,upper_item_name,project_name

[model_list_tjqd2]
class = GDETJQD2ServiceModel
task_type = 清单
item_name_key = item_name
item_feature_key = item_feature
upper_item_name_key = upper_item_name
project_name_key = project_name
need_fields = item_name,item_feature,upper_item_name,project_name




