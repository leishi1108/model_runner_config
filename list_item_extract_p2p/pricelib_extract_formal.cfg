[DEFAULT]
workspace = /home/shilei/fbpmx/list_extract/pricelib_extract_formal_${date}

[project]
actions = generate, evaluate, run, deploy
datasets = yunnan_price_library_data_expected, labor_decompose_standard_price_library_data_expected, price_library_add_data, price_library_2025
evaluators = gde_predict, add_data_gde_predict, pricelib_element_extract_evaluate, pricelib_element_fixed_extract_evaluate
stages = yunnan_price_library_data_export, labor_decompose_standard_price_library_data_export, price_library_add_data_evaluate, test_data_fixed_evaluate, train_data_export, price_library_2025_export
deployers = pricelib_element_model


[deployer_pricelib_element_model]
class = P2PDeployerMultiHeadMultiLabelTransformersClassification
candidate_models = pricelib_model6
model_name = pricelib_element_model
num_labels = 1
labels = "构件"::"地形,道路,场地,降水井,土石方,支撑架,基坑围护,桩,砖砌挖孔桩护壁,基坑支护,地堰,花架,挡鼠板,坐凳,脚手架,竖井,车位,幕墙,屋面,消防水池,走道,地沟,采光顶,蓄水池,油池,门窗,泥浆池,止水帷幕,屋架,台阶,栏杆扶手,散水,组合栏板扶手,阳台,设备基础,挑耳,衰变池,泛水,吸水槽,地下连续墙导墙,飘窗,老虎窗,压顶,汽车坡道,防水导墙,无障碍坡道,墙,成孔芯模,空挡,板,结构缝,排水沟,基础,后浇带,洞口,梁,组合结构墙,楼梯,栏板,保温墙,挑檐板,地基,墙垛,后塞口,雨篷,暗柱,柱,斜杆,变形缝,水簸箕,隅撑,栓钉,钢柱,钢梁,钢板,钢架,钢檩条,钢拉索,钢结构连接节点,钢楼梯,钢门柱,钢窗柱,钢平台,钢墙架,设备钢支座,牛腿,桩尖,爬梯,组合结构柱,组合结构梁,组合结构楼板,车棚,楼地面,踢脚线,装饰成品构件,固定脚套,墙面,钢板墙板,墙裙,天棚,装饰线条,护角,地台,建筑地坪,场地地形,土方,石方,边桩,钢节点,支护桩,支撑梁,钢格构柱,钢支撑,桩间挂网,护坡,斜支撑,地下连续墙,电梯井,楼梯井,车挡,屋面变形缝,女儿墙,排水板,反檐,垃圾道、通风道、烟道,走道板,门,卷帘动力装置,窗,窗台板,门联窗,门套、窗套,门框,栏杆,扶手,预制阳台,砖胎膜,预制飘窗,结构墙,挡土墙,人防门框墙,钢墙,隔墙,砌体墙,挡水墙,预制墙,现浇板,沟盖板、井盖板、井圈,预制板,构造板,凸窗侧板,钢板楼板,板缝,褥垫层,基础梁,集水坑,垫层,筏板基础,条形基础,独立基础,桩承台,桩基,板洞,墙洞,壁龛,门窗洞口,检修口,灯孔,结构梁,连梁,过梁,圈梁,构造梁,梁加腋,暗梁,预制梁,预制过梁,直形梯段,螺旋梯段,预制楼梯,天然地基,换填地基,预制雨篷,结构柱,构造柱,柱墩,柱帽,柱脚,砌体柱,预制柱,实腹钢梁,翼缘板,钢屋架,钢网架,钢桁架,钢托架,楼地面变形缝,过门石,固定件,内墙面,外墙面,墙面变形缝,柱面,吊顶,梁面,余方,钢桩,土钉墙,锚杆(锚索),垃圾道,通风道,烟道,沟盖板,井盖板,井圈,电梯坑,桩头,桩端,门洞口,窗洞口,抱框柱,内墙裙,外墙裙,GFRP土钉,截水沟,电缆沟,围墙"
label2score= {"构件": {"地形": "地形", "道路": "道路", "场地": "场地", "降水井": "降水井", "土石方": "土石方", "支撑架": "支撑架", "基坑围护": "基坑围护", "桩": "桩", "砖砌挖孔桩护壁": "砖砌挖孔桩护壁", "基坑支护": "基坑支护", "地堰": "地堰", "花架": "花架", "挡鼠板": "挡鼠板", "坐凳": "坐凳", "脚手架": "脚手架", "竖井": "竖井", "车位": "车位", "幕墙": "幕墙", "屋面": "屋面", "消防水池": "消防水池", "走道": "走道", "地沟": "地沟", "采光顶": "采光顶", "蓄水池": "蓄水池", "油池": "油池", "门窗": "门窗", "泥浆池": "泥浆池", "止水帷幕": "止水帷幕", "屋架": "屋架", "台阶": "台阶", "栏杆扶手": "栏杆扶手", "散水": "散水", "组合栏板扶手": "组合栏板扶手", "阳台": "阳台", "设备基础": "设备基础", "挑耳": "挑耳", "衰变池": "衰变池", "泛水": "泛水", "吸水槽": "吸水槽", "地下连续墙导墙": "地下连续墙导墙", "飘窗": "飘窗", "老虎窗": "老虎窗", "压顶": "压顶", "汽车坡道": "汽车坡道", "防水导墙": "防水导墙", "无障碍坡道": "无障碍坡道", "墙": "墙", "成孔芯模": "成孔芯模", "空挡": "空挡", "板": "板", "结构缝": "结构缝", "排水沟": "排水沟", "基础": "基础", "后浇带": "后浇带", "洞口": "洞口", "梁": "梁", "组合结构墙": "组合结构墙", "楼梯": "楼梯", "栏板": "栏板", "保温墙": "保温墙", "挑檐板": "挑檐板", "地基": "地基", "墙垛": "墙垛", "后塞口": "后塞口", "雨篷": "雨篷", "暗柱": "暗柱", "柱": "柱", "斜杆": "斜杆", "变形缝": "变形缝", "水簸箕": "水簸箕", "隅撑": "隅撑", "栓钉": "栓钉", "钢柱": "钢柱", "钢梁": "钢梁", "钢板": "钢板", "钢架": "钢架", "钢檩条": "钢檩条", "钢拉索": "钢拉索", "钢结构连接节点": "钢结构连接节点", "钢楼梯": "钢楼梯", "钢门柱": "钢门柱", "钢窗柱": "钢窗柱", "钢平台": "钢平台", "钢墙架": "钢墙架", "设备钢支座": "设备钢支座", "牛腿": "牛腿", "桩尖": "桩尖", "爬梯": "爬梯", "组合结构柱": "组合结构柱", "组合结构梁": "组合结构梁", "组合结构楼板": "组合结构楼板", "车棚": "车棚", "楼地面": "楼地面", "踢脚线": "踢脚线", "装饰成品构件": "装饰成品构件", "固定脚套": "固定脚套", "墙面": "墙面", "钢板墙板": "钢板墙板", "墙裙": "墙裙", "天棚": "天棚", "装饰线条": "装饰线条", "护角": "护角", "地台": "地台", "建筑地坪": "建筑地坪", "场地地形": "场地地形", "土方": "土方", "石方": "石方", "边桩": "边桩", "钢节点": "钢节点", "支护桩": "支护桩", "支撑梁": "支撑梁", "钢格构柱": "钢格构柱", "钢支撑": "钢支撑", "桩间挂网": "桩间挂网", "护坡": "护坡", "斜支撑": "斜支撑", "地下连续墙": "地下连续墙", "电梯井": "电梯井", "楼梯井": "楼梯井", "车挡": "车挡", "屋面变形缝": "屋面变形缝", "女儿墙": "女儿墙", "排水板": "排水板", "反檐": "反檐", "垃圾道、通风道、烟道": "垃圾道、通风道、烟道", "走道板": "走道板", "门": "门", "卷帘动力装置": "卷帘动力装置", "窗": "窗", "窗台板": "窗台板", "门联窗": "门联窗", "门套、窗套": "门套、窗套", "门框": "门框", "栏杆": "栏杆", "扶手": "扶手", "预制阳台": "预制阳台", "砖胎膜": "砖胎膜", "预制飘窗": "预制飘窗", "结构墙": "结构墙", "挡土墙": "挡土墙", "人防门框墙": "人防门框墙", "钢墙": "钢墙", "隔墙": "隔墙", "砌体墙": "砌体墙", "挡水墙": "挡水墙", "预制墙": "预制墙", "现浇板": "现浇板", "沟盖板、井盖板、井圈": "沟盖板、井盖板、井圈", "预制板": "预制板", "构造板": "构造板", "凸窗侧板": "凸窗侧板", "钢板楼板": "钢板楼板", "板缝": "板缝", "褥垫层": "褥垫层", "基础梁": "基础梁", "集水坑": "集水坑", "垫层": "垫层", "筏板基础": "筏板基础", "条形基础": "条形基础", "独立基础": "独立基础", "桩承台": "桩承台", "桩基": "桩基", "板洞": "板洞", "墙洞": "墙洞", "壁龛": "壁龛", "门窗洞口": "门窗洞口", "检修口": "检修口", "灯孔": "灯孔", "结构梁": "结构梁", "连梁": "连梁", "过梁": "过梁", "圈梁": "圈梁", "构造梁": "构造梁", "梁加腋": "梁加腋", "暗梁": "暗梁", "预制梁": "预制梁", "预制过梁": "预制过梁", "直形梯段": "直形梯段", "螺旋梯段": "螺旋梯段", "预制楼梯": "预制楼梯", "天然地基": "天然地基", "换填地基": "换填地基", "预制雨篷": "预制雨篷", "结构柱": "结构柱", "构造柱": "构造柱", "柱墩": "柱墩", "柱帽": "柱帽", "柱脚": "柱脚", "砌体柱": "砌体柱", "预制柱": "预制柱", "实腹钢梁": "实腹钢梁", "翼缘板": "翼缘板", "钢屋架": "钢屋架", "钢网架": "钢网架", "钢桁架": "钢桁架", "钢托架": "钢托架", "楼地面变形缝": "楼地面变形缝", "过门石": "过门石", "固定件": "固定件", "内墙面": "内墙面", "外墙面": "外墙面", "墙面变形缝": "墙面变形缝", "柱面": "柱面", "吊顶": "吊顶", "梁面": "梁面", "余方": "余方", "钢桩": "钢桩", "土钉墙": "土钉墙", "锚杆(锚索)": "锚杆(锚索)", "垃圾道": "垃圾道", "通风道": "通风道", "烟道": "烟道", "沟盖板": "沟盖板", "井盖板": "井盖板", "井圈": "井圈", "电梯坑": "电梯坑", "桩头": "桩头", "桩端": "桩端", "门洞口": "门洞口", "窗洞口": "窗洞口", "抱框柱": "抱框柱", "内墙裙": "内墙裙", "外墙裙": "外墙裙", "GFRP土钉": "GFRP土钉", "截水沟": "截水沟", "电缆沟": "电缆沟", "围墙": "围墙"}}
score_key = {"构件": "构件_score"}
user_name=shil-k
backup_dir=/home/shilei/fbpmx/list_extract/backup_models/pricelib_element_model
trace_output_dir=/home/shilei/fbpmx/list_extract/deployer_pricelib_element_model/${date}/
max_seq_length = 128
max_batch_size=32
max_batch_size_ms=32



[dataset_raw_yunnan_price_library_data]
class = ReadExcelDataset
; dir = /home/shilei/corpus/cost_split/工程数据分包指导价库_云南建投202408-解析结果(工程数据分包价格库).xlsx
dir = /home/shilei/corpus/cost_split/云南建投全量数据0826-解析结果(工程数据分包指导价).xlsx
header_row = 1


[dataset_yunnan_price_library_data_expected]
class = FilterDataset
input = raw_yunnan_price_library_data
filters = "uid.2" in x and x["uid.2"] is not None

[dataset_yunnan_price_library_data]
class = MapDataset
input = yunnan_price_library_data_expected
expression = exec('import re; import uuid') or {"item_id": uuid.uuid4().hex,
    "list_key": str(x["filepath"]).split("/")[-1].split("-解析结果")[0] + "-" + str(x["uid"]),
    "item_name": x["名称"],
    "item_feature": x["项目特征"],
    "upper_item_name": x["分部全路径"],
    "pid": "云南建设202408",
    "item_name_wk": f'清单名称: {x["名称"]}' if x["名称"] is not None else "",
    "item_feature_wk": f'清单特征: {x["项目特征"]}' if x["项目特征"] is not None else "",
    "upper_item_name_wk": f'全路径: {x["分部全路径"]}' if x["分部全路径"] is not None else "",

    "部位预期": ":".join(map(str, [a for a in [x["群体.1"], x["单体.1"], x["楼层.1"], x["流水段.1"], x["空间.1"], x["配套建筑.1"], x["标段.1"], x["地上地下.1"]] if a is not None])),
    "构件预期": ",".join(sorted(x["构件.1"].split(","))) if x["构件.1"] is not None else "",
    "材料预期": ",".join(sorted(x["材料.1"].split(","))) if x["材料.1"] is not None else "",
    "专业预期": x["专业.1"],
    "分部分项预期": x["成本分部分项.1"],
    "构件属性预期":  x["构件属性.1"],
    "材料属性预期":  x["材料属性.1"],
    }
keep_exists = True


[dataset_yunnan_price_library_data_for_export]
class = MapDataset
input = yunnan_price_library_data
expression = {"project_id": x["pid"],
    "list_key": x["list_key"],
    "指导价部位": ",".join(map(str, x["gde_pricelib_score"]["group"]+x["gde_pricelib_score"]["building"]+x["gde_pricelib_score"]["floor"]+x["gde_pricelib_score"]["section"]+x["gde_pricelib_score"]["space"]+x["gde_pricelib_score"]["supporting"]+x["gde_pricelib_score"]["lot"]+x["gde_pricelib_score"]["up-or-down"])),
    "指导价构件": ",".join(sorted(x["gde_pricelib_score"]["element"])),
    "指导价构件属性": x["gde_pricelib_score"]["element_property"],
    "指导价材料": ",".join(sorted(x["gde_pricelib_score"]["material"])),
    "指导价材料属性": x["gde_pricelib_score"]["material_property"],

    "指导价专业": ",".join(map(str, sorted(x["gde_pricelib_score"]["specialty"]))),
    "指导价新专业": ",".join(map(str, sorted(x["gde_pricelib_score"]["specialty_new"]))),
    "指导价分部分项": ",".join(map(str, sorted(x["gde_pricelib_score"]["cost-partial"]))),

    "指导价材料实体": ",".join(sorted(set([a["内容"] for a in x["gde_pricelib_score"]["ner_entities"]["name_entity"]+x["gde_pricelib_score"]["ner_entities"]["att_entity"] if "材料" in a["类型"] and a["被排除"] is False]))),
    "指导价构件实体": ",".join(sorted(set([a["内容"] for a in x["gde_pricelib_score"]["ner_entities"]["name_entity"]+x["gde_pricelib_score"]["ner_entities"]["att_entity"] if a["类型"]=="构件" and a["被排除"] is False]))),

    "部位预期": x["部位预期"],
    "构件预期": x["构件预期"],
    "构件属性预期": x["构件属性预期"],
    "材料预期": x["材料预期"],
    "材料属性预期": x["材料属性预期"],
    "专业预期": x["专业预期"],
    "分部分项预期": x["分部分项预期"],

;     "模型构件": ",".join(sorted( [k for k, v in x["GTJ_formal_element_extract_model_fixed_score"].items() if float(v)>=0.48] )),
    "模型构件": ",".join(sorted( [k for k, v in x["GTJ_formal_element_extract_model_fixed8_score"].items() if float(v)>=0.31] )),
    }
extra_dependencies = evaluator_gde_predict
keep_exists = True


[stage_yunnan_price_library_data_export]
class = DatasetValStage
dataset = yunnan_price_library_data_for_export
output_fields = list_key, upper_item_name, item_name, item_feature, 指导价部位, 指导价专业, 指导价分部分项, 指导价构件, 指导价构件属性, 指导价材料, 指导价材料属性, 部位预期, 专业预期, 分部分项预期, 构件预期, 构件属性预期, 材料预期, 材料属性预期, 指导价构件实体, 指导价材料实体, 指导价新专业, 模型构件
output_names = list_key, 上级指导价名称, 指导价名称, 指导价特征, 指导价部位, 指导价专业, 指导价分部分项, 指导价构件, 指导价构件属性, 指导价材料, 指导价材料属性, 部位预期, 专业预期, 分部分项预期, 构件预期, 构件属性预期, 材料预期, 材料属性预期, 指导价构件实体, 指导价材料实体, 指导价新专业, 模型构件
save_res_path = /home/shilei/fbpmx/list_extract/pricelib_extract_formal_${date}/yunnan_price_library_data_export.xlsx
map_dict = {"指导价专业":"专业预期", "指导价分部分项":"分部分项预期", "指导价构件":"构件预期", "指导价构件属性":"构件属性预期", "指导价材料":"材料预期", "指导价材料属性":"材料属性预期", "指导价工序":"工序预期", "指导价空间":"空间预期", "指导价配套建筑":"配套建筑预期", "指导价地上地下":"地上地下预期", "模型构件": "构件预期"}



###############################

[dataset_raw_labor_decompose_standard_price_library_data]
class = ReadExcelDataset
; dir = /home/shilei/corpus/cost_split/指导价验证集-劳务分包标准-解析结果(工程数据分包指导价).xlsx
dir = /home/shilei/corpus/cost_split/y分包指导价清单-解析结果(工程数据分包指导价).xlsx
header_row = 1

[dataset_labor_decompose_standard_price_library_data_expected]
class = FilterDataset
input = raw_labor_decompose_standard_price_library_data
filters = "uid.2" in x and x["uid.2"] is not None


[dataset_labor_decompose_standard_price_library_data]
class = MapDataset
input = labor_decompose_standard_price_library_data_expected
expression = exec('import re; import uuid') or {"item_id": uuid.uuid4().hex,
    "list_key": str(x["filepath"]).split("/")[-1].split("-解析结果")[0] + "-" + str(x["uid"]),
    "item_name": x["名称"],
    "item_feature": x["项目特征"],
    "upper_item_name": x["分部全路径"],
    "pid": "劳务分包标准",
    "item_name_wk": f'清单名称: {x["名称"]}' if x["名称"] is not None else "",
    "item_feature_wk": f'清单特征: {x["项目特征"]}' if x["项目特征"] is not None else "",
    "upper_item_name_wk": f'全路径: {x["分部全路径"]}' if x["分部全路径"] is not None else "",
    "部位预期": ":".join(map(str, [a for a in [x["群体.1"], x["单体.1"], x["楼层.1"], x["流水段.1"], x["空间.1"], x["配套建筑.1"], x["标段.1"], x["地上地下.1"]] if a is not None])),
    "构件预期": ",".join(sorted(x["构件.1"].split(","))) if x["构件.1"] is not None else "",
    "材料预期": ",".join(sorted(x["材料.1"].split(","))) if x["材料.1"] is not None else "",
    "专业预期": x["专业.1"],
    "分部分项预期": x["成本分部分项.1"],
    }

[dataset_labor_decompose_standard_price_library_data_dedup]
class = AccumulateDataset
input = labor_decompose_standard_price_library_data
deduplicate_by = list_key

[dataset_labor_decompose_element_property]
class = MapDataset
input = labor_decompose_standard_price_library_data_expected
expression = {"list_key": str(x["filepath"]).split("/")[-1].split("-解析结果")[0] + "-" + str(x["uid"]),
    "构件属性预期":  x["构件属性.1"]}

[dataset_labor_decompose_element_property_grouped]
class = GroupedDataset
input = labor_decompose_element_property
groupby = list_key
value_key = 构件属性预期

[dataset_labor_decompose_material_property]
class = MapDataset
input = labor_decompose_standard_price_library_data_expected
expression = {"list_key": str(x["filepath"]).split("/")[-1].split("-解析结果")[0] + "-" + str(x["uid"]),
    "材料属性预期":  x["材料属性.1"]}

[dataset_labor_decompose_material_property_grouped]
class = GroupedDataset
input = labor_decompose_material_property
groupby = list_key
value_key = 材料属性预期


[dataset_labor_decompose_mergeElementProperty]
class = MergeIntoDataset
base_dataset = labor_decompose_standard_price_library_data_dedup
merge_datasets = labor_decompose_element_property_grouped
merge_type = only_replace
merge_key = list_key
merge_values = 构件属性预期
reset = False

[dataset_labor_decompose_mergeALL]
class = MergeIntoDataset
base_dataset = labor_decompose_mergeElementProperty
merge_datasets = labor_decompose_material_property_grouped
merge_type = only_replace
merge_key = list_key
merge_values = 材料属性预期
reset = False


; "部位预期": ":".join(map(str, [a for a in [x["群体.1"], x["单体.1"], x["楼层.1"], x["流水段.1"], x["空间.1"], x["配套建筑.1"], x["标段.1"], x["地上地下.1"]] if a is not None])),
;     "构件预期": ",".join(sorted(x["构件.1"].split(","))) if x["构件.1"] is not None else "",
;     "材料预期": ",".join(sorted(x["材料.1"].split(","))) if x["材料.1"] is not None else "",
;     "专业预期": x["专业.1"],
;     "分部分项预期": x["成本分部分项.1"],
;

[dataset_labor_decompose_standard_price_library_data_for_export]
class = MapDataset
input = labor_decompose_mergeALL
expression = {"project_id": x["pid"],
    "指导价部位": ",".join(map(str, x["gde_pricelib_score"]["group"]+x["gde_pricelib_score"]["building"]+x["gde_pricelib_score"]["floor"]+x["gde_pricelib_score"]["section"]+x["gde_pricelib_score"]["space"]+x["gde_pricelib_score"]["supporting"]+x["gde_pricelib_score"]["lot"]+x["gde_pricelib_score"]["up-or-down"])),
    "指导价构件": ",".join(sorted(x["gde_pricelib_score"]["element"])),
    "指导价构件属性": x["gde_pricelib_score"]["element_property"],
    "指导价材料": ",".join(sorted(x["gde_pricelib_score"]["material"])),
    "指导价材料属性": x["gde_pricelib_score"]["material_property"],

    "指导价专业": ",".join(map(str, sorted(x["gde_pricelib_score"]["specialty"]))),
    "指导价新专业": ",".join(map(str, sorted(x["gde_pricelib_score"]["specialty_new"]))),
    "指导价分部分项": ",".join(map(str, sorted(x["gde_pricelib_score"]["cost-partial"]))),

    "指导价材料实体": ",".join(sorted(set([a["内容"] for a in x["gde_pricelib_score"]["ner_entities"]["name_entity"]+x["gde_pricelib_score"]["ner_entities"]["att_entity"] if "材料" in a["类型"] and a["被排除"] is False]))),
    "指导价构件实体": ",".join(sorted(set([a["内容"] for a in x["gde_pricelib_score"]["ner_entities"]["name_entity"]+x["gde_pricelib_score"]["ner_entities"]["att_entity"] if a["类型"]=="构件" and a["被排除"] is False]))),

    "部位预期": x["部位预期"],
    "构件预期": x["构件预期"],
    "构件属性预期": x["构件属性预期"],
    "材料预期": x["材料预期"],
    "材料属性预期": x["材料属性预期"],
    "专业预期": x["专业预期"],
    "分部分项预期": x["分部分项预期"],

;     "模型构件": ",".join(sorted( [k for k, v in x["GTJ_formal_element_extract_model_fixed_score"].items() if float(v)>=0.48] )),
    "模型构件": ",".join(sorted( [k for k, v in x["GTJ_formal_element_extract_model_fixed8_score"].items() if float(v)>=0.31] )),
    }
extra_dependencies = evaluator_gde_predict
keep_exists = True

[stage_labor_decompose_standard_price_library_data_export]
class = DatasetValStage
dataset = labor_decompose_standard_price_library_data_for_export
output_fields = project_id, uid, upper_item_name, item_name, item_feature, 指导价部位, 指导价专业, 指导价分部分项, 指导价构件, 指导价构件属性, 指导价材料, 指导价材料属性, 部位预期, 专业预期, 分部分项预期, 构件预期, 构件属性预期, 材料预期, 材料属性预期, 指导价构件实体, 指导价材料实体, 指导价新专业, 模型构件
output_names = 工程ID, 指导价ID, 上级指导价名称, 指导价名称, 指导价特征, 指导价部位, 指导价专业, 指导价分部分项, 指导价构件, 指导价构件属性, 指导价材料, 指导价材料属性, 部位预期, 专业预期, 分部分项预期, 构件预期, 构件属性预期, 材料预期, 材料属性预期, 指导价构件实体, 指导价材料实体, 指导价新专业, 模型构件
save_res_path = /home/shilei/fbpmx/list_extract/pricelib_extract_formal_${date}/labor_decompose_standard_price_library_data_export.xlsx
map_dict = {"指导价专业":"专业预期", "指导价分部分项":"分部分项预期", "指导价构件":"构件预期", "指导价构件属性":"构件属性预期", "指导价材料":"材料预期", "指导价材料属性":"材料属性预期", "指导价工序":"工序预期", "指导价空间":"空间预期", "指导价配套建筑":"配套建筑预期", "指导价地上地下":"地上地下预期", "模型构件": "构件预期"}


################## 预训练 base模型 #############
[dataset_formal_data_train_fixed_label]
class = ExistsDataset
; workspace = /home/shilei/fbpmx/list_extract/list_extract_analysis_for_gtj_fixlabel_element_20241129
workspace = /home/shilei/fbpmx/list_extract/list_extract_analysis_for_gtj_fixlabel_element_20241203
reset = False

; from /home/shilei/fbpmx/list_extract/list_extract_analysis_for_gtj_fixlabel_element_20241203/model_GTJ_formal_extract_model_fixed8
; "GTJ_formal_element_extract_model_fixed8": {
;       "summary": {
;         "count": 7380,
;         "evaluate_count": 7380,
;         "max_acc": 0.9209,
;         "max_t": 0.31
;       }
;     }
; "GTJ_formal_element_extract_model_fixed8": {
;       "summary": {
;         "count": 2735,
;         "evaluate_count": 2735,
;         "max_acc": 0.9536,
;         "max_t": 0.22
;       }
;     }


[model_GTJ_formal_extract_model_fixed8]
class = MultiHeadMultiLabelClassificationModel
data = formal_data_train_fixed_label
bert_base = /home/shilei/model_repository/chinese-roberta-wwm-ext_ft
text_key = item_name_wk
extra_feats = upper_item_name_wk, item_feature_wk
labels_delimeter = |
label_key = "构件": "element_label"
labels = "构件"::"地形|道路|场地|降水井|土石方|支撑架|基坑围护|桩|砖砌挖孔桩护壁|基坑支护|地堰|花架|挡鼠板|坐凳|脚手架|竖井|车位|幕墙|屋面|消防水池|走道|地沟|采光顶|蓄水池|油池|门窗|泥浆池|止水帷幕|屋架|台阶|栏杆扶手|散水|组合栏板扶手|阳台|设备基础|挑耳|衰变池|泛水|吸水槽|地下连续墙导墙|飘窗|老虎窗|压顶|汽车坡道|防水导墙|无障碍坡道|墙|成孔芯模|空挡|板|结构缝|排水沟|基础|后浇带|洞口|梁|组合结构墙|楼梯|栏板|保温墙|挑檐板|地基|墙垛|后塞口|雨篷|暗柱|柱|斜杆|变形缝|水簸箕|隅撑|栓钉|钢柱|钢梁|钢板|钢架|钢檩条|钢拉索|钢结构连接节点|钢楼梯|钢门柱|钢窗柱|钢平台|钢墙架|设备钢支座|牛腿|桩尖|爬梯|组合结构柱|组合结构梁|组合结构楼板|车棚|楼地面|踢脚线|装饰成品构件|固定脚套|墙面|钢板墙板|墙裙|天棚|装饰线条|护角|地台|建筑地坪|场地地形|土方|石方|边桩|钢节点|支护桩|支撑梁|钢格构柱|钢支撑|桩间挂网|护坡|斜支撑|地下连续墙|电梯井|楼梯井|车挡|屋面变形缝|女儿墙|排水板|反檐|垃圾道、通风道、烟道|走道板|门|卷帘动力装置|窗|窗台板|门联窗|门套、窗套|门框|栏杆|扶手|预制阳台|砖胎膜|预制飘窗|结构墙|挡土墙|人防门框墙|钢墙|隔墙|砌体墙|挡水墙|预制墙|现浇板|沟盖板、井盖板、井圈|预制板|构造板|凸窗侧板|钢板楼板|板缝|褥垫层|基础梁|集水坑|垫层|筏板基础|条形基础|独立基础|桩承台|桩基|板洞|墙洞|壁龛|门窗洞口|检修口|灯孔|结构梁|连梁|过梁|圈梁|构造梁|梁加腋|暗梁|预制梁|预制过梁|直形梯段|螺旋梯段|预制楼梯|天然地基|换填地基|预制雨篷|结构柱|构造柱|柱墩|柱帽|柱脚|砌体柱|预制柱|实腹钢梁|翼缘板|钢屋架|钢网架|钢桁架|钢托架|楼地面变形缝|过门石|固定件|内墙面|外墙面|墙面变形缝|柱面|吊顶|梁面|余方|钢桩|土钉墙|锚杆(锚索)|垃圾道|通风道|烟道|沟盖板|井盖板|井圈|电梯坑|桩头|桩端|门洞口|窗洞口|抱框柱|内墙裙|外墙裙|GFRP土钉|截水沟|电缆沟|围墙"
num_labels = 1
learning_rate = 5.0e-5
num_epochs = 200
train_ratio = 0.85
batch_size = 128
max_seq_length = 128
re_predict = True


[model_GTJ_formal_element_extract_model_fixed8]
class = CalculateModel
models = GTJ_formal_extract_model_fixed8
expression = GTJ_formal_extract_model_fixed8["构件"]
re_predict = True


[model_gde_pricelib]
class = GDEPriceLibServiceModel
task_type = 清单
item_name_key = item_name
item_feature_key = item_feature
upper_item_name_key = upper_item_name
need_fields = item_name, item_feature, upper_item_name
re_predict = True

[model_gde_pricelib_rule]
class = GDEPriceLibRuleServiceModel
task_type = 清单
item_name_key = item_name
item_feature_key = item_feature
upper_item_name_key = upper_item_name
need_fields = item_name, item_feature, upper_item_name
re_predict = True

[evaluator_gde_predict]
class = SimplePredictor
datasets = yunnan_price_library_data, labor_decompose_mergeALL
models = gde_pricelib, GTJ_formal_element_extract_model_fixed8
num_workers = 8



############### 训练集 ##########################

[dataset_price_library_add_raw_data]
class = ReadExcelDataset
dir = /home/shilei/corpus/cost_split/指导价验证集-2-解析结果(工程数据分包指导价).xlsx, /home/shilei/corpus/cost_split/指导价验证数据集_0814-复核-解析结果(工程数据分包指导价).xlsx
header_row = 1

[dataset_price_library_add_data_expected]
class = FilterDataset
input = price_library_add_raw_data
filters = "uid.2" in x and x["uid.2"] is not None


[dataset_price_library_add_data]
class = MapDataset
input = price_library_add_data_expected
expression = exec('import re; import uuid') or {"item_id": uuid.uuid4().hex,
    "list_key": str(x["filepath"]).split("/")[-1].split("-解析结果")[0] + "-" + str(x["uid"]),
    "item_name": x["名称"],
    "item_feature": x["项目特征"],
    "upper_item_name": x["分部全路径"],
    "pid": str(x["filepath"]).split("/")[-1].split("-解析结果")[0],
    "item_name_wk": f'清单名称: {x["名称"]}' if x["名称"] is not None else "",
    "item_feature_wk": f'清单特征: {x["项目特征"]}' if x["项目特征"] is not None else "",
    "upper_item_name_wk": f'全路径: {x["分部全路径"]}' if x["分部全路径"] is not None else "",
    "部位预期": ":".join(map(str, [a for a in [x["群体.1"], x["单体.1"], x["楼层.1"], x["流水段.1"], x["空间.1"], x["配套建筑.1"], x["标段.1"], x["地上地下.1"]] if a is not None])),
    "构件预期": ",".join(sorted(x["构件.1"].split(","))) if x["构件.1"] is not None else "",
    "材料预期": ",".join(sorted(x["材料.1"].split(","))) if x["材料.1"] is not None else "",
    "专业预期": x["专业.1"],
    "分部分项预期": x["成本分部分项.1"],
    "构件属性预期":  x["构件属性.1"],
    "材料属性预期":  x["材料属性.1"],
    }
keep_exists = True


[evaluator_add_data_gde_predict]
class = SimplePredictor
datasets = price_library_add_data
models = gde_pricelib, GTJ_formal_element_extract_model_fixed8
num_workers = 8


[dataset_price_library_add_data_for_evaluate]
class = MapDataset
input = price_library_add_data
expression = {"project_id": x["pid"],
    "指导价专业": ",".join(map(str, sorted(x["gde_pricelib_score"]["specialty"]))),
    "指导价分部分项": ",".join(map(str, sorted(x["gde_pricelib_score"]["cost-partial"]))),
    "指导价构件": ",".join(map(str, sorted(x["gde_pricelib_score"]["element"]))),
    "指导价构件属性": ",".join([f"{m[0]}:{m[1]}" for m in sorted({k:','.join(map(str, [sub_v['std'] for sub_v in v])) if isinstance(v, list) else f"{k}:{v['std']}" for p in x["gde_pricelib_score"]["element_property"] for k, v in eval(p).items()}.items(), key=lambda x: x[0])]),
    "指导价材料": ",".join(map(str, sorted(x["gde_pricelib_score"]["material"]))),
    "指导价材料属性": ",".join([f"{m[0]}:{m[1]}" for m in sorted({k:','.join(map(str, [sub_v['std'] for sub_v in v])) if isinstance(v, list) else f"{k}:{v['std']}" for p in x["gde_pricelib_score"]["material_property"] for k, v in eval(p).items()}.items(), key=lambda x: x[0])]),
    "指导价工序": ",".join(map(str, sorted(x["gde_pricelib_score"]["sequence"]))),
    "指导价空间": ",".join(map(str, sorted(x["gde_pricelib_score"]["space"]))).replace(":", ""),
    "指导价配套建筑": ",".join(map(str, sorted(x["gde_pricelib_score"]["supporting"]))).replace(":", ""),
    "指导价地上地下": ",".join(map(str, sorted(x["gde_pricelib_score"]["up-or-down"]))).replace(":", ""),

    "部位预期": x["部位预期"],
    "构件预期": x["构件预期"],
    "构件属性预期": x["构件属性预期"],
    "材料预期": x["材料预期"],
    "材料属性预期": x["材料属性预期"],
    "专业预期": x["专业预期"],
    "分部分项预期": x["分部分项预期"],

;     "模型构件": ",".join(sorted( [k for k, v in x["GTJ_formal_element_extract_model_fixed_score"].items() if float(v)>=0.48] )),
    "模型构件": ",".join(sorted( [k for k, v in x["GTJ_formal_element_extract_model_fixed8_score"].items() if float(v)>=0.31] )),
    }
extra_dependencies = evaluator_add_data_gde_predict
keep_exists = True

[stage_price_library_add_data_evaluate]
class = DatasetValStage
dataset = price_library_add_data_for_evaluate
output_fields = project_id, uid, upper_item_name, item_name, item_feature, 指导价专业, 专业预期, 指导价分部分项, 分部分项预期, 指导价构件, 构件预期, 指导价构件属性, 构件属性预期, 指导价材料, 材料预期, 指导价材料属性, 材料属性预期, 指导价工序, 工序预期, 指导价空间, 空间预期, 指导价配套建筑, 配套建筑预期, 指导价地上地下, 地上地下预期, 模型构件
output_names = 工程ID, 指导价ID, 上级指导价名称, 指导价名称, 指导价特征, 指导价专业, 专业预期, 指导价分部分项, 分部分项预期, 指导价构件, 构件预期, 指导价构件属性, 构件属性预期, 指导价材料, 材料预期, 指导价材料属性, 材料属性预期, 指导价工序, 工序预期, 指导价空间, 空间预期, 指导价配套建筑, 配套建筑预期, 指导价地上地下, 地上地下预期, 模型构件
save_res_path = /home/shilei/fbpmx/list_extract/pricelib_extract_formal_${date}/price_library_add_data_evaluate.xlsx
map_dict = {"指导价专业":"专业预期", "指导价分部分项":"分部分项预期", "指导价构件":"构件预期", "指导价构件属性":"构件属性预期", "指导价材料":"材料预期", "指导价材料属性":"材料属性预期", "指导价工序":"工序预期", "指导价空间":"空间预期", "指导价配套建筑":"配套建筑预期", "指导价地上地下":"地上地下预期", "模型构件": "构件预期"}

########################################################################################################################

[dataset_merge]
class = MergeDataset
datasets = yunnan_price_library_data, price_library_add_data, labor_decompose_mergeALL

[dataset_merge_label]
class = MapDataset
input = merge
expression = {
    "upper_item_name_dropout": x["upper_item_name_wk"],
    "element_label": list(sorted(x["构件预期"].split(","))) if x["构件预期"] is not None and len(x["构件预期"])>0 else [],
    "material_label": list(sorted(x["材料预期"].split(","))) if x["材料预期"] is not None and len(x["材料预期"])>0 else []
    }
keep_exists = True

[dataset_merge_train]
class = FilterDataset
input = merge_label
filters = ("item_id" in x) and ( int(x["item_id"][-5:],16) % 10 >= 2 )

[dataset_merge_test]
class = FilterDataset
input = merge_label
filters = ("item_id" in x) and ( int(x["item_id"][-5:],16) % 10 < 2 )


[model_pricelib_model]
class = MultiHeadMultiLabelClassificationModel
data = merge_train
; bert_base = /home/shilei/fbpmx/list_extract/list_extract_analysis_for_gtj_fixlabel_element_20241129/model_GTJ_formal_extract_model_fixed/model
bert_base = /home/shilei/fbpmx/list_extract/list_extract_analysis_for_gtj_fixlabel_element_20241203/model_GTJ_formal_extract_model_fixed8/model
text_key = item_name_wk
extra_feats = upper_item_name_wk, item_feature_wk
labels_delimeter = |
label_key = "构件": "element_label"
labels = "构件"::"地形|道路|场地|降水井|土石方|支撑架|基坑围护|桩|砖砌挖孔桩护壁|基坑支护|地堰|花架|挡鼠板|坐凳|脚手架|竖井|车位|幕墙|屋面|消防水池|走道|地沟|采光顶|蓄水池|油池|门窗|泥浆池|止水帷幕|屋架|台阶|栏杆扶手|散水|组合栏板扶手|阳台|设备基础|挑耳|衰变池|泛水|吸水槽|地下连续墙导墙|飘窗|老虎窗|压顶|汽车坡道|防水导墙|无障碍坡道|墙|成孔芯模|空挡|板|结构缝|排水沟|基础|后浇带|洞口|梁|组合结构墙|楼梯|栏板|保温墙|挑檐板|地基|墙垛|后塞口|雨篷|暗柱|柱|斜杆|变形缝|水簸箕|隅撑|栓钉|钢柱|钢梁|钢板|钢架|钢檩条|钢拉索|钢结构连接节点|钢楼梯|钢门柱|钢窗柱|钢平台|钢墙架|设备钢支座|牛腿|桩尖|爬梯|组合结构柱|组合结构梁|组合结构楼板|车棚|楼地面|踢脚线|装饰成品构件|固定脚套|墙面|钢板墙板|墙裙|天棚|装饰线条|护角|地台|建筑地坪|场地地形|土方|石方|边桩|钢节点|支护桩|支撑梁|钢格构柱|钢支撑|桩间挂网|护坡|斜支撑|地下连续墙|电梯井|楼梯井|车挡|屋面变形缝|女儿墙|排水板|反檐|垃圾道、通风道、烟道|走道板|门|卷帘动力装置|窗|窗台板|门联窗|门套、窗套|门框|栏杆|扶手|预制阳台|砖胎膜|预制飘窗|结构墙|挡土墙|人防门框墙|钢墙|隔墙|砌体墙|挡水墙|预制墙|现浇板|沟盖板、井盖板、井圈|预制板|构造板|凸窗侧板|钢板楼板|板缝|褥垫层|基础梁|集水坑|垫层|筏板基础|条形基础|独立基础|桩承台|桩基|板洞|墙洞|壁龛|门窗洞口|检修口|灯孔|结构梁|连梁|过梁|圈梁|构造梁|梁加腋|暗梁|预制梁|预制过梁|直形梯段|螺旋梯段|预制楼梯|天然地基|换填地基|预制雨篷|结构柱|构造柱|柱墩|柱帽|柱脚|砌体柱|预制柱|实腹钢梁|翼缘板|钢屋架|钢网架|钢桁架|钢托架|楼地面变形缝|过门石|固定件|内墙面|外墙面|墙面变形缝|柱面|吊顶|梁面|余方|钢桩|土钉墙|锚杆(锚索)|垃圾道|通风道|烟道|沟盖板|井盖板|井圈|电梯坑|桩头|桩端|门洞口|窗洞口|抱框柱|内墙裙|外墙裙|GFRP土钉|截水沟|电缆沟|围墙"
num_labels = 1
learning_rate = 5.0e-5
num_epochs = 200
train_ratio = 0.85
batch_size = 128
max_seq_length = 128
re_predict = True

[model_pricelib_model2]
class = MultiHeadMultiLabelClassificationModel
data = merge_train
; bert_base = /home/shilei/fbpmx/list_extract/list_extract_analysis_for_gtj_fixlabel_element_20241129/model_GTJ_formal_extract_model_fixed/model
bert_base = /home/shilei/fbpmx/list_extract/list_extract_analysis_for_gtj_fixlabel_element_20241203/model_GTJ_formal_extract_model_fixed8/model
text_key = item_name_wk
extra_feats = upper_item_name_wk, item_feature_wk
labels_delimeter = |
label_key = "构件": "element_label"
labels = "构件"::"地形|道路|场地|降水井|土石方|支撑架|基坑围护|桩|砖砌挖孔桩护壁|基坑支护|地堰|花架|挡鼠板|坐凳|脚手架|竖井|车位|幕墙|屋面|消防水池|走道|地沟|采光顶|蓄水池|油池|门窗|泥浆池|止水帷幕|屋架|台阶|栏杆扶手|散水|组合栏板扶手|阳台|设备基础|挑耳|衰变池|泛水|吸水槽|地下连续墙导墙|飘窗|老虎窗|压顶|汽车坡道|防水导墙|无障碍坡道|墙|成孔芯模|空挡|板|结构缝|排水沟|基础|后浇带|洞口|梁|组合结构墙|楼梯|栏板|保温墙|挑檐板|地基|墙垛|后塞口|雨篷|暗柱|柱|斜杆|变形缝|水簸箕|隅撑|栓钉|钢柱|钢梁|钢板|钢架|钢檩条|钢拉索|钢结构连接节点|钢楼梯|钢门柱|钢窗柱|钢平台|钢墙架|设备钢支座|牛腿|桩尖|爬梯|组合结构柱|组合结构梁|组合结构楼板|车棚|楼地面|踢脚线|装饰成品构件|固定脚套|墙面|钢板墙板|墙裙|天棚|装饰线条|护角|地台|建筑地坪|场地地形|土方|石方|边桩|钢节点|支护桩|支撑梁|钢格构柱|钢支撑|桩间挂网|护坡|斜支撑|地下连续墙|电梯井|楼梯井|车挡|屋面变形缝|女儿墙|排水板|反檐|垃圾道、通风道、烟道|走道板|门|卷帘动力装置|窗|窗台板|门联窗|门套、窗套|门框|栏杆|扶手|预制阳台|砖胎膜|预制飘窗|结构墙|挡土墙|人防门框墙|钢墙|隔墙|砌体墙|挡水墙|预制墙|现浇板|沟盖板、井盖板、井圈|预制板|构造板|凸窗侧板|钢板楼板|板缝|褥垫层|基础梁|集水坑|垫层|筏板基础|条形基础|独立基础|桩承台|桩基|板洞|墙洞|壁龛|门窗洞口|检修口|灯孔|结构梁|连梁|过梁|圈梁|构造梁|梁加腋|暗梁|预制梁|预制过梁|直形梯段|螺旋梯段|预制楼梯|天然地基|换填地基|预制雨篷|结构柱|构造柱|柱墩|柱帽|柱脚|砌体柱|预制柱|实腹钢梁|翼缘板|钢屋架|钢网架|钢桁架|钢托架|楼地面变形缝|过门石|固定件|内墙面|外墙面|墙面变形缝|柱面|吊顶|梁面|余方|钢桩|土钉墙|锚杆(锚索)|垃圾道|通风道|烟道|沟盖板|井盖板|井圈|电梯坑|桩头|桩端|门洞口|窗洞口|抱框柱|内墙裙|外墙裙|GFRP土钉|截水沟|电缆沟|围墙"
num_labels = 1
learning_rate = 5.0e-5
num_epochs = 200
train_ratio = 0.85
batch_size = 128
max_seq_length = 128
re_predict = True

[model_pricelib_model3]
class = MultiHeadMultiLabelClassificationModel
data = merge_train
; bert_base = /home/shilei/fbpmx/list_extract/list_extract_analysis_for_gtj_fixlabel_element_20241129/model_GTJ_formal_extract_model_fixed/model
bert_base = /home/shilei/fbpmx/list_extract/list_extract_analysis_for_gtj_fixlabel_element_20241203/model_GTJ_formal_extract_model_fixed8/model
text_key = item_name_wk
extra_feats = upper_item_name_wk, item_feature_wk
labels_delimeter = |
label_key = "构件": "element_label"
labels = "构件"::"地形|道路|场地|降水井|土石方|支撑架|基坑围护|桩|砖砌挖孔桩护壁|基坑支护|地堰|花架|挡鼠板|坐凳|脚手架|竖井|车位|幕墙|屋面|消防水池|走道|地沟|采光顶|蓄水池|油池|门窗|泥浆池|止水帷幕|屋架|台阶|栏杆扶手|散水|组合栏板扶手|阳台|设备基础|挑耳|衰变池|泛水|吸水槽|地下连续墙导墙|飘窗|老虎窗|压顶|汽车坡道|防水导墙|无障碍坡道|墙|成孔芯模|空挡|板|结构缝|排水沟|基础|后浇带|洞口|梁|组合结构墙|楼梯|栏板|保温墙|挑檐板|地基|墙垛|后塞口|雨篷|暗柱|柱|斜杆|变形缝|水簸箕|隅撑|栓钉|钢柱|钢梁|钢板|钢架|钢檩条|钢拉索|钢结构连接节点|钢楼梯|钢门柱|钢窗柱|钢平台|钢墙架|设备钢支座|牛腿|桩尖|爬梯|组合结构柱|组合结构梁|组合结构楼板|车棚|楼地面|踢脚线|装饰成品构件|固定脚套|墙面|钢板墙板|墙裙|天棚|装饰线条|护角|地台|建筑地坪|场地地形|土方|石方|边桩|钢节点|支护桩|支撑梁|钢格构柱|钢支撑|桩间挂网|护坡|斜支撑|地下连续墙|电梯井|楼梯井|车挡|屋面变形缝|女儿墙|排水板|反檐|垃圾道、通风道、烟道|走道板|门|卷帘动力装置|窗|窗台板|门联窗|门套、窗套|门框|栏杆|扶手|预制阳台|砖胎膜|预制飘窗|结构墙|挡土墙|人防门框墙|钢墙|隔墙|砌体墙|挡水墙|预制墙|现浇板|沟盖板、井盖板、井圈|预制板|构造板|凸窗侧板|钢板楼板|板缝|褥垫层|基础梁|集水坑|垫层|筏板基础|条形基础|独立基础|桩承台|桩基|板洞|墙洞|壁龛|门窗洞口|检修口|灯孔|结构梁|连梁|过梁|圈梁|构造梁|梁加腋|暗梁|预制梁|预制过梁|直形梯段|螺旋梯段|预制楼梯|天然地基|换填地基|预制雨篷|结构柱|构造柱|柱墩|柱帽|柱脚|砌体柱|预制柱|实腹钢梁|翼缘板|钢屋架|钢网架|钢桁架|钢托架|楼地面变形缝|过门石|固定件|内墙面|外墙面|墙面变形缝|柱面|吊顶|梁面|余方|钢桩|土钉墙|锚杆(锚索)|垃圾道|通风道|烟道|沟盖板|井盖板|井圈|电梯坑|桩头|桩端|门洞口|窗洞口|抱框柱|内墙裙|外墙裙|GFRP土钉|截水沟|电缆沟|围墙"
num_labels = 1
learning_rate = 5.0e-5
num_epochs = 200
train_ratio = 0.85
batch_size = 256
max_seq_length = 128
re_predict = True


[model_pricelib_model4]
class = MultiHeadMultiLabelClassificationModel
data = merge_train
; bert_base = /home/shilei/fbpmx/list_extract/list_extract_analysis_for_gtj_fixlabel_element_20241129/model_GTJ_formal_extract_model_fixed/model
bert_base = /home/shilei/fbpmx/list_extract/list_extract_analysis_for_gtj_fixlabel_element_20241203/model_GTJ_formal_extract_model_fixed8/model
text_key = item_name_wk
extra_feats = upper_item_name_wk, item_feature_wk
labels_delimeter = |
label_key = "构件": "element_label"
labels = "构件"::"地形|道路|场地|降水井|土石方|支撑架|基坑围护|桩|砖砌挖孔桩护壁|基坑支护|地堰|花架|挡鼠板|坐凳|脚手架|竖井|车位|幕墙|屋面|消防水池|走道|地沟|采光顶|蓄水池|油池|门窗|泥浆池|止水帷幕|屋架|台阶|栏杆扶手|散水|组合栏板扶手|阳台|设备基础|挑耳|衰变池|泛水|吸水槽|地下连续墙导墙|飘窗|老虎窗|压顶|汽车坡道|防水导墙|无障碍坡道|墙|成孔芯模|空挡|板|结构缝|排水沟|基础|后浇带|洞口|梁|组合结构墙|楼梯|栏板|保温墙|挑檐板|地基|墙垛|后塞口|雨篷|暗柱|柱|斜杆|变形缝|水簸箕|隅撑|栓钉|钢柱|钢梁|钢板|钢架|钢檩条|钢拉索|钢结构连接节点|钢楼梯|钢门柱|钢窗柱|钢平台|钢墙架|设备钢支座|牛腿|桩尖|爬梯|组合结构柱|组合结构梁|组合结构楼板|车棚|楼地面|踢脚线|装饰成品构件|固定脚套|墙面|钢板墙板|墙裙|天棚|装饰线条|护角|地台|建筑地坪|场地地形|土方|石方|边桩|钢节点|支护桩|支撑梁|钢格构柱|钢支撑|桩间挂网|护坡|斜支撑|地下连续墙|电梯井|楼梯井|车挡|屋面变形缝|女儿墙|排水板|反檐|垃圾道、通风道、烟道|走道板|门|卷帘动力装置|窗|窗台板|门联窗|门套、窗套|门框|栏杆|扶手|预制阳台|砖胎膜|预制飘窗|结构墙|挡土墙|人防门框墙|钢墙|隔墙|砌体墙|挡水墙|预制墙|现浇板|沟盖板、井盖板、井圈|预制板|构造板|凸窗侧板|钢板楼板|板缝|褥垫层|基础梁|集水坑|垫层|筏板基础|条形基础|独立基础|桩承台|桩基|板洞|墙洞|壁龛|门窗洞口|检修口|灯孔|结构梁|连梁|过梁|圈梁|构造梁|梁加腋|暗梁|预制梁|预制过梁|直形梯段|螺旋梯段|预制楼梯|天然地基|换填地基|预制雨篷|结构柱|构造柱|柱墩|柱帽|柱脚|砌体柱|预制柱|实腹钢梁|翼缘板|钢屋架|钢网架|钢桁架|钢托架|楼地面变形缝|过门石|固定件|内墙面|外墙面|墙面变形缝|柱面|吊顶|梁面|余方|钢桩|土钉墙|锚杆(锚索)|垃圾道|通风道|烟道|沟盖板|井盖板|井圈|电梯坑|桩头|桩端|门洞口|窗洞口|抱框柱|内墙裙|外墙裙|GFRP土钉|截水沟|电缆沟|围墙"
num_labels = 1
learning_rate = 5.0e-5
num_epochs = 200
train_ratio = 0.85
batch_size = 256
max_seq_length = 128
re_predict = True


[model_pricelib_element_model]
class = CalculateModel
models = pricelib_model
expression = pricelib_model["构件"]
re_predict = True


[model_pricelib_element_model2]
class = CalculateModel
models = pricelib_model2
expression = pricelib_model2["构件"]
re_predict = True


[model_pricelib_element_model3]
class = CalculateModel
models = pricelib_model3
expression = pricelib_model3["构件"]
re_predict = True


[model_pricelib_element_model4]
class = CalculateModel
models = pricelib_model4
expression = pricelib_model4["构件"]
re_predict = True


[evaluator_pricelib_element_extract_evaluate]
class= MultiLabelClassificationTBEvaluator
dataset = merge_test
models = pricelib_element_model,pricelib_element_model2,pricelib_element_model3,pricelib_element_model4
categories = 地形|道路|场地|降水井|土石方|支撑架|基坑围护|桩|砖砌挖孔桩护壁|基坑支护|地堰|花架|挡鼠板|坐凳|脚手架|竖井|车位|幕墙|屋面|消防水池|走道|地沟|采光顶|蓄水池|油池|门窗|泥浆池|止水帷幕|屋架|台阶|栏杆扶手|散水|组合栏板扶手|阳台|设备基础|挑耳|衰变池|泛水|吸水槽|地下连续墙导墙|飘窗|老虎窗|压顶|汽车坡道|防水导墙|无障碍坡道|墙|成孔芯模|空挡|板|结构缝|排水沟|基础|后浇带|洞口|梁|组合结构墙|楼梯|栏板|保温墙|挑檐板|地基|墙垛|后塞口|雨篷|暗柱|柱|斜杆|变形缝|水簸箕|隅撑|栓钉|钢柱|钢梁|钢板|钢架|钢檩条|钢拉索|钢结构连接节点|钢楼梯|钢门柱|钢窗柱|钢平台|钢墙架|设备钢支座|牛腿|桩尖|爬梯|组合结构柱|组合结构梁|组合结构楼板|车棚|楼地面|踢脚线|装饰成品构件|固定脚套|墙面|钢板墙板|墙裙|天棚|装饰线条|护角|地台|建筑地坪|场地地形|土方|石方|边桩|钢节点|支护桩|支撑梁|钢格构柱|钢支撑|桩间挂网|护坡|斜支撑|地下连续墙|电梯井|楼梯井|车挡|屋面变形缝|女儿墙|排水板|反檐|垃圾道、通风道、烟道|走道板|门|卷帘动力装置|窗|窗台板|门联窗|门套、窗套|门框|栏杆|扶手|预制阳台|砖胎膜|预制飘窗|结构墙|挡土墙|人防门框墙|钢墙|隔墙|砌体墙|挡水墙|预制墙|现浇板|沟盖板、井盖板、井圈|预制板|构造板|凸窗侧板|钢板楼板|板缝|褥垫层|基础梁|集水坑|垫层|筏板基础|条形基础|独立基础|桩承台|桩基|板洞|墙洞|壁龛|门窗洞口|检修口|灯孔|结构梁|连梁|过梁|圈梁|构造梁|梁加腋|暗梁|预制梁|预制过梁|直形梯段|螺旋梯段|预制楼梯|天然地基|换填地基|预制雨篷|结构柱|构造柱|柱墩|柱帽|柱脚|砌体柱|预制柱|实腹钢梁|翼缘板|钢屋架|钢网架|钢桁架|钢托架|楼地面变形缝|过门石|固定件|内墙面|外墙面|墙面变形缝|柱面|吊顶|梁面|余方|钢桩|土钉墙|锚杆(锚索)|垃圾道|通风道|烟道|沟盖板|井盖板|井圈|电梯坑|桩头|桩端|门洞口|窗洞口|抱框柱|内墙裙|外墙裙|GFRP土钉|截水沟|电缆沟|围墙
categories_delimeter = |
label_key = element_label
save_res_path = /home/shilei/fbpmx/list_extract/pricelib_extract_formal_${date}/pricelib_element_extract_evaluate.xlsx


[dataset_test_data_for_export]
class = MapDataset
input = merge_test
expression = {
    "item_id": x["item_id"],
    "list_key": x["list_key"],
    "分部分项预期": x["分部分项预期"],
    "构件预期": x["构件预期"],
    "模型构件": ",".join(sorted( [k for k, v in x["pricelib_element_model4_score"].items() if float(v)>=0.5] )),
    "材料预期": x["材料预期"],
    }
extra_dependencies = evaluator_pricelib_element_extract_evaluate
keep_exists = True

[stage_test_data_evaluate]
class = DatasetValStage
dataset = test_data_for_export
output_fields = list_key, upper_item_name, item_name, item_feature, 分部分项预期, 构件预期, 模型构件, 材料预期
output_names = 清单id, 上级名称, 清单名称, 清单特征, 分部分项预期, 构件预期, 模型构件, 材料预期
save_res_path = /home/shilei/fbpmx/list_extract/pricelib_extract_formal_${date}/stage_test_data_evaluate.xlsx
map_dict = {"模型构件":"构件预期"}


#################### 对齐标准修改数据 ##################

[dataset_raw_fixed_data]
class = ReadExcelDataset
dir = /home/shilei/corpus/cost_split/stage_test_data_evaluate_pricelib_20241202.xlsx, /home/shilei/corpus/cost_split/stage_train_data_export_pricelib_20241202.xlsx
sheet_names = pred_data
header_row = 0

[dataset_raw_element_fixed_data]
class = FilterDataset
input = raw_fixed_data
filters = "构件预期修改" in x and x["构件预期修改"] is not None

[dataset_element_fixed_data]
class = MapDataset
input = raw_element_fixed_data
expression = {"list_key": str(x["清单id"]),
    "element_label": [] if x["构件预期修改"] == "无构件" else list(sorted(x["构件预期修改"].split(","))),
    }

[dataset_raw_material_fixed_data]
class = FilterDataset
input = raw_fixed_data
filters = "材料预期修改" in x and x["材料预期修改"] is not None

[dataset_material_fixed_data]
class = MapDataset
input = raw_material_fixed_data
expression = {"list_key": str(x["清单id"]),
    "material_label": [] if x["材料预期修改"] == "无材料" else list(sorted(x["材料预期修改"].split(","))),
    }


[dataset_merge_element_fixed_label]
class = MergeIntoDataset
base_dataset = merge_label
merge_datasets = element_fixed_data
merge_type = only_replace
merge_key = list_key
merge_values = element_label
reset = False

[dataset_merge_all_fixed_label]
class = MergeIntoDataset
base_dataset = merge_element_fixed_label
merge_datasets = material_fixed_data
merge_type = only_replace
merge_key = list_key
merge_values = material_label
reset = False


[dataset_merge_fixed_train]
class = FilterDataset
input = merge_all_fixed_label
filters = ("item_id" in x) and ( int(x["item_id"][-5:],16) % 10 >= 2 )

[dataset_merge_fixed_test]
class = FilterDataset
input = merge_all_fixed_label
filters = ("item_id" in x) and ( int(x["item_id"][-5:],16) % 10 < 2 )


[model_pricelib_model5]
class = MultiHeadMultiLabelClassificationModel
data = merge_fixed_train
; bert_base = /home/shilei/fbpmx/list_extract/list_extract_analysis_for_gtj_fixlabel_element_20241129/model_GTJ_formal_extract_model_fixed/model
bert_base = /home/shilei/fbpmx/list_extract/list_extract_analysis_for_gtj_fixlabel_element_20241203/model_GTJ_formal_extract_model_fixed8/model
text_key = item_name_wk
extra_feats = upper_item_name_wk, item_feature_wk
labels_delimeter = |
label_key = "构件": "element_label"
labels = "构件"::"地形|道路|场地|降水井|土石方|支撑架|基坑围护|桩|砖砌挖孔桩护壁|基坑支护|地堰|花架|挡鼠板|坐凳|脚手架|竖井|车位|幕墙|屋面|消防水池|走道|地沟|采光顶|蓄水池|油池|门窗|泥浆池|止水帷幕|屋架|台阶|栏杆扶手|散水|组合栏板扶手|阳台|设备基础|挑耳|衰变池|泛水|吸水槽|地下连续墙导墙|飘窗|老虎窗|压顶|汽车坡道|防水导墙|无障碍坡道|墙|成孔芯模|空挡|板|结构缝|排水沟|基础|后浇带|洞口|梁|组合结构墙|楼梯|栏板|保温墙|挑檐板|地基|墙垛|后塞口|雨篷|暗柱|柱|斜杆|变形缝|水簸箕|隅撑|栓钉|钢柱|钢梁|钢板|钢架|钢檩条|钢拉索|钢结构连接节点|钢楼梯|钢门柱|钢窗柱|钢平台|钢墙架|设备钢支座|牛腿|桩尖|爬梯|组合结构柱|组合结构梁|组合结构楼板|车棚|楼地面|踢脚线|装饰成品构件|固定脚套|墙面|钢板墙板|墙裙|天棚|装饰线条|护角|地台|建筑地坪|场地地形|土方|石方|边桩|钢节点|支护桩|支撑梁|钢格构柱|钢支撑|桩间挂网|护坡|斜支撑|地下连续墙|电梯井|楼梯井|车挡|屋面变形缝|女儿墙|排水板|反檐|垃圾道、通风道、烟道|走道板|门|卷帘动力装置|窗|窗台板|门联窗|门套、窗套|门框|栏杆|扶手|预制阳台|砖胎膜|预制飘窗|结构墙|挡土墙|人防门框墙|钢墙|隔墙|砌体墙|挡水墙|预制墙|现浇板|沟盖板、井盖板、井圈|预制板|构造板|凸窗侧板|钢板楼板|板缝|褥垫层|基础梁|集水坑|垫层|筏板基础|条形基础|独立基础|桩承台|桩基|板洞|墙洞|壁龛|门窗洞口|检修口|灯孔|结构梁|连梁|过梁|圈梁|构造梁|梁加腋|暗梁|预制梁|预制过梁|直形梯段|螺旋梯段|预制楼梯|天然地基|换填地基|预制雨篷|结构柱|构造柱|柱墩|柱帽|柱脚|砌体柱|预制柱|实腹钢梁|翼缘板|钢屋架|钢网架|钢桁架|钢托架|楼地面变形缝|过门石|固定件|内墙面|外墙面|墙面变形缝|柱面|吊顶|梁面|余方|钢桩|土钉墙|锚杆(锚索)|垃圾道|通风道|烟道|沟盖板|井盖板|井圈|电梯坑|桩头|桩端|门洞口|窗洞口|抱框柱|内墙裙|外墙裙|GFRP土钉|截水沟|电缆沟|围墙"
num_labels = 1
learning_rate = 5.0e-5
num_epochs = 200
train_ratio = 0.85
batch_size = 128
max_seq_length = 128
re_predict = True

[model_pricelib_model6]
class = MultiHeadMultiLabelClassificationModel
data = merge_fixed_train
; bert_base = /home/shilei/fbpmx/list_extract/list_extract_analysis_for_gtj_fixlabel_element_20241129/model_GTJ_formal_extract_model_fixed/model
bert_base = /home/shilei/fbpmx/list_extract/list_extract_analysis_for_gtj_fixlabel_element_20241203/model_GTJ_formal_extract_model_fixed8/model
text_key = item_name_wk
extra_feats = upper_item_name_wk, item_feature_wk
labels_delimeter = |
label_key = "构件": "element_label"
labels = "构件"::"地形|道路|场地|降水井|土石方|支撑架|基坑围护|桩|砖砌挖孔桩护壁|基坑支护|地堰|花架|挡鼠板|坐凳|脚手架|竖井|车位|幕墙|屋面|消防水池|走道|地沟|采光顶|蓄水池|油池|门窗|泥浆池|止水帷幕|屋架|台阶|栏杆扶手|散水|组合栏板扶手|阳台|设备基础|挑耳|衰变池|泛水|吸水槽|地下连续墙导墙|飘窗|老虎窗|压顶|汽车坡道|防水导墙|无障碍坡道|墙|成孔芯模|空挡|板|结构缝|排水沟|基础|后浇带|洞口|梁|组合结构墙|楼梯|栏板|保温墙|挑檐板|地基|墙垛|后塞口|雨篷|暗柱|柱|斜杆|变形缝|水簸箕|隅撑|栓钉|钢柱|钢梁|钢板|钢架|钢檩条|钢拉索|钢结构连接节点|钢楼梯|钢门柱|钢窗柱|钢平台|钢墙架|设备钢支座|牛腿|桩尖|爬梯|组合结构柱|组合结构梁|组合结构楼板|车棚|楼地面|踢脚线|装饰成品构件|固定脚套|墙面|钢板墙板|墙裙|天棚|装饰线条|护角|地台|建筑地坪|场地地形|土方|石方|边桩|钢节点|支护桩|支撑梁|钢格构柱|钢支撑|桩间挂网|护坡|斜支撑|地下连续墙|电梯井|楼梯井|车挡|屋面变形缝|女儿墙|排水板|反檐|垃圾道、通风道、烟道|走道板|门|卷帘动力装置|窗|窗台板|门联窗|门套、窗套|门框|栏杆|扶手|预制阳台|砖胎膜|预制飘窗|结构墙|挡土墙|人防门框墙|钢墙|隔墙|砌体墙|挡水墙|预制墙|现浇板|沟盖板、井盖板、井圈|预制板|构造板|凸窗侧板|钢板楼板|板缝|褥垫层|基础梁|集水坑|垫层|筏板基础|条形基础|独立基础|桩承台|桩基|板洞|墙洞|壁龛|门窗洞口|检修口|灯孔|结构梁|连梁|过梁|圈梁|构造梁|梁加腋|暗梁|预制梁|预制过梁|直形梯段|螺旋梯段|预制楼梯|天然地基|换填地基|预制雨篷|结构柱|构造柱|柱墩|柱帽|柱脚|砌体柱|预制柱|实腹钢梁|翼缘板|钢屋架|钢网架|钢桁架|钢托架|楼地面变形缝|过门石|固定件|内墙面|外墙面|墙面变形缝|柱面|吊顶|梁面|余方|钢桩|土钉墙|锚杆(锚索)|垃圾道|通风道|烟道|沟盖板|井盖板|井圈|电梯坑|桩头|桩端|门洞口|窗洞口|抱框柱|内墙裙|外墙裙|GFRP土钉|截水沟|电缆沟|围墙"
num_labels = 1
learning_rate = 5.0e-5
num_epochs = 200
train_ratio = 0.85
batch_size = 128
max_seq_length = 128
re_predict = True

[model_pricelib_model7]
class = MultiHeadMultiLabelClassificationModel
data = merge_fixed_train
; bert_base = /home/shilei/fbpmx/list_extract/list_extract_analysis_for_gtj_fixlabel_element_20241129/model_GTJ_formal_extract_model_fixed/model
bert_base = /home/shilei/fbpmx/list_extract/list_extract_analysis_for_gtj_fixlabel_element_20241203/model_GTJ_formal_extract_model_fixed8/model
text_key = item_name_wk
extra_feats = upper_item_name_wk, item_feature_wk
labels_delimeter = |
label_key = "构件": "element_label"
labels = "构件"::"地形|道路|场地|降水井|土石方|支撑架|基坑围护|桩|砖砌挖孔桩护壁|基坑支护|地堰|花架|挡鼠板|坐凳|脚手架|竖井|车位|幕墙|屋面|消防水池|走道|地沟|采光顶|蓄水池|油池|门窗|泥浆池|止水帷幕|屋架|台阶|栏杆扶手|散水|组合栏板扶手|阳台|设备基础|挑耳|衰变池|泛水|吸水槽|地下连续墙导墙|飘窗|老虎窗|压顶|汽车坡道|防水导墙|无障碍坡道|墙|成孔芯模|空挡|板|结构缝|排水沟|基础|后浇带|洞口|梁|组合结构墙|楼梯|栏板|保温墙|挑檐板|地基|墙垛|后塞口|雨篷|暗柱|柱|斜杆|变形缝|水簸箕|隅撑|栓钉|钢柱|钢梁|钢板|钢架|钢檩条|钢拉索|钢结构连接节点|钢楼梯|钢门柱|钢窗柱|钢平台|钢墙架|设备钢支座|牛腿|桩尖|爬梯|组合结构柱|组合结构梁|组合结构楼板|车棚|楼地面|踢脚线|装饰成品构件|固定脚套|墙面|钢板墙板|墙裙|天棚|装饰线条|护角|地台|建筑地坪|场地地形|土方|石方|边桩|钢节点|支护桩|支撑梁|钢格构柱|钢支撑|桩间挂网|护坡|斜支撑|地下连续墙|电梯井|楼梯井|车挡|屋面变形缝|女儿墙|排水板|反檐|垃圾道、通风道、烟道|走道板|门|卷帘动力装置|窗|窗台板|门联窗|门套、窗套|门框|栏杆|扶手|预制阳台|砖胎膜|预制飘窗|结构墙|挡土墙|人防门框墙|钢墙|隔墙|砌体墙|挡水墙|预制墙|现浇板|沟盖板、井盖板、井圈|预制板|构造板|凸窗侧板|钢板楼板|板缝|褥垫层|基础梁|集水坑|垫层|筏板基础|条形基础|独立基础|桩承台|桩基|板洞|墙洞|壁龛|门窗洞口|检修口|灯孔|结构梁|连梁|过梁|圈梁|构造梁|梁加腋|暗梁|预制梁|预制过梁|直形梯段|螺旋梯段|预制楼梯|天然地基|换填地基|预制雨篷|结构柱|构造柱|柱墩|柱帽|柱脚|砌体柱|预制柱|实腹钢梁|翼缘板|钢屋架|钢网架|钢桁架|钢托架|楼地面变形缝|过门石|固定件|内墙面|外墙面|墙面变形缝|柱面|吊顶|梁面|余方|钢桩|土钉墙|锚杆(锚索)|垃圾道|通风道|烟道|沟盖板|井盖板|井圈|电梯坑|桩头|桩端|门洞口|窗洞口|抱框柱|内墙裙|外墙裙|GFRP土钉|截水沟|电缆沟|围墙"
num_labels = 1
learning_rate = 2.0e-5
num_epochs = 200
train_ratio = 0.85
batch_size = 256
max_seq_length = 128
re_predict = True


[model_pricelib_model8]
class = MultiHeadMultiLabelClassificationModel
data = merge_fixed_train
; bert_base = /home/shilei/fbpmx/list_extract/list_extract_analysis_for_gtj_fixlabel_element_20241129/model_GTJ_formal_extract_model_fixed/model
bert_base = /home/shilei/fbpmx/list_extract/list_extract_analysis_for_gtj_fixlabel_element_20241203/model_GTJ_formal_extract_model_fixed8/model
text_key = item_name_wk
extra_feats = upper_item_name_wk, item_feature_wk
labels_delimeter = |
label_key = "构件": "element_label"
labels = "构件"::"地形|道路|场地|降水井|土石方|支撑架|基坑围护|桩|砖砌挖孔桩护壁|基坑支护|地堰|花架|挡鼠板|坐凳|脚手架|竖井|车位|幕墙|屋面|消防水池|走道|地沟|采光顶|蓄水池|油池|门窗|泥浆池|止水帷幕|屋架|台阶|栏杆扶手|散水|组合栏板扶手|阳台|设备基础|挑耳|衰变池|泛水|吸水槽|地下连续墙导墙|飘窗|老虎窗|压顶|汽车坡道|防水导墙|无障碍坡道|墙|成孔芯模|空挡|板|结构缝|排水沟|基础|后浇带|洞口|梁|组合结构墙|楼梯|栏板|保温墙|挑檐板|地基|墙垛|后塞口|雨篷|暗柱|柱|斜杆|变形缝|水簸箕|隅撑|栓钉|钢柱|钢梁|钢板|钢架|钢檩条|钢拉索|钢结构连接节点|钢楼梯|钢门柱|钢窗柱|钢平台|钢墙架|设备钢支座|牛腿|桩尖|爬梯|组合结构柱|组合结构梁|组合结构楼板|车棚|楼地面|踢脚线|装饰成品构件|固定脚套|墙面|钢板墙板|墙裙|天棚|装饰线条|护角|地台|建筑地坪|场地地形|土方|石方|边桩|钢节点|支护桩|支撑梁|钢格构柱|钢支撑|桩间挂网|护坡|斜支撑|地下连续墙|电梯井|楼梯井|车挡|屋面变形缝|女儿墙|排水板|反檐|垃圾道、通风道、烟道|走道板|门|卷帘动力装置|窗|窗台板|门联窗|门套、窗套|门框|栏杆|扶手|预制阳台|砖胎膜|预制飘窗|结构墙|挡土墙|人防门框墙|钢墙|隔墙|砌体墙|挡水墙|预制墙|现浇板|沟盖板、井盖板、井圈|预制板|构造板|凸窗侧板|钢板楼板|板缝|褥垫层|基础梁|集水坑|垫层|筏板基础|条形基础|独立基础|桩承台|桩基|板洞|墙洞|壁龛|门窗洞口|检修口|灯孔|结构梁|连梁|过梁|圈梁|构造梁|梁加腋|暗梁|预制梁|预制过梁|直形梯段|螺旋梯段|预制楼梯|天然地基|换填地基|预制雨篷|结构柱|构造柱|柱墩|柱帽|柱脚|砌体柱|预制柱|实腹钢梁|翼缘板|钢屋架|钢网架|钢桁架|钢托架|楼地面变形缝|过门石|固定件|内墙面|外墙面|墙面变形缝|柱面|吊顶|梁面|余方|钢桩|土钉墙|锚杆(锚索)|垃圾道|通风道|烟道|沟盖板|井盖板|井圈|电梯坑|桩头|桩端|门洞口|窗洞口|抱框柱|内墙裙|外墙裙|GFRP土钉|截水沟|电缆沟|围墙"
num_labels = 1
learning_rate = 2.0e-5
num_epochs = 200
train_ratio = 0.85
batch_size = 256
max_seq_length = 128
re_predict = True


[model_pricelib_element_model5]
class = CalculateModel
models = pricelib_model5
expression = pricelib_model5["构件"]
re_predict = True


[model_pricelib_element_model6]
class = CalculateModel
models = pricelib_model6
expression = pricelib_model6["构件"]
re_predict = True


[model_pricelib_element_model7]
class = CalculateModel
models = pricelib_model7
expression = pricelib_model7["构件"]
re_predict = True


[model_pricelib_element_model8]
class = CalculateModel
models = pricelib_model8
expression = pricelib_model8["构件"]
re_predict = True


[evaluator_pricelib_element_fixed_extract_evaluate]
class= MultiLabelClassificationTBEvaluator
dataset = merge_fixed_test
models = pricelib_element_model5,pricelib_element_model6,pricelib_element_model7,pricelib_element_model8
categories = 地形|道路|场地|降水井|土石方|支撑架|基坑围护|桩|砖砌挖孔桩护壁|基坑支护|地堰|花架|挡鼠板|坐凳|脚手架|竖井|车位|幕墙|屋面|消防水池|走道|地沟|采光顶|蓄水池|油池|门窗|泥浆池|止水帷幕|屋架|台阶|栏杆扶手|散水|组合栏板扶手|阳台|设备基础|挑耳|衰变池|泛水|吸水槽|地下连续墙导墙|飘窗|老虎窗|压顶|汽车坡道|防水导墙|无障碍坡道|墙|成孔芯模|空挡|板|结构缝|排水沟|基础|后浇带|洞口|梁|组合结构墙|楼梯|栏板|保温墙|挑檐板|地基|墙垛|后塞口|雨篷|暗柱|柱|斜杆|变形缝|水簸箕|隅撑|栓钉|钢柱|钢梁|钢板|钢架|钢檩条|钢拉索|钢结构连接节点|钢楼梯|钢门柱|钢窗柱|钢平台|钢墙架|设备钢支座|牛腿|桩尖|爬梯|组合结构柱|组合结构梁|组合结构楼板|车棚|楼地面|踢脚线|装饰成品构件|固定脚套|墙面|钢板墙板|墙裙|天棚|装饰线条|护角|地台|建筑地坪|场地地形|土方|石方|边桩|钢节点|支护桩|支撑梁|钢格构柱|钢支撑|桩间挂网|护坡|斜支撑|地下连续墙|电梯井|楼梯井|车挡|屋面变形缝|女儿墙|排水板|反檐|垃圾道、通风道、烟道|走道板|门|卷帘动力装置|窗|窗台板|门联窗|门套、窗套|门框|栏杆|扶手|预制阳台|砖胎膜|预制飘窗|结构墙|挡土墙|人防门框墙|钢墙|隔墙|砌体墙|挡水墙|预制墙|现浇板|沟盖板、井盖板、井圈|预制板|构造板|凸窗侧板|钢板楼板|板缝|褥垫层|基础梁|集水坑|垫层|筏板基础|条形基础|独立基础|桩承台|桩基|板洞|墙洞|壁龛|门窗洞口|检修口|灯孔|结构梁|连梁|过梁|圈梁|构造梁|梁加腋|暗梁|预制梁|预制过梁|直形梯段|螺旋梯段|预制楼梯|天然地基|换填地基|预制雨篷|结构柱|构造柱|柱墩|柱帽|柱脚|砌体柱|预制柱|实腹钢梁|翼缘板|钢屋架|钢网架|钢桁架|钢托架|楼地面变形缝|过门石|固定件|内墙面|外墙面|墙面变形缝|柱面|吊顶|梁面|余方|钢桩|土钉墙|锚杆(锚索)|垃圾道|通风道|烟道|沟盖板|井盖板|井圈|电梯坑|桩头|桩端|门洞口|窗洞口|抱框柱|内墙裙|外墙裙|GFRP土钉|截水沟|电缆沟|围墙
categories_delimeter = |
label_key = element_label
save_res_path = /home/shilei/fbpmx/list_extract/pricelib_extract_formal_${date}/pricelib_element_fixed_extract_evaluate.xlsx


[evaluator_test_data_repredict]
class = SimplePredictor
datasets = merge_fixed_test
models = gde_pricelib, gde_pricelib_rule


[dataset_test_data_fixed_for_export]
class = MapDataset
input = merge_fixed_test
expression = {
    "item_id": x["item_id"],
    "list_key": x["list_key"],
    "分部分项预期": x["分部分项预期"],
    "构件预期": ",".join(sorted(x["element_label"])) if x["element_label"] is not None else "",
;     "模型构件": ",".join(sorted( [k for k, v in x["pricelib_element_model6_score"].items() if float(v)>=0.36] )),
    "模型构件": ",".join(sorted( [k for k, v in x["pricelib_element_model5_score"].items() if float(v)>=0.25] )),
    "指导价构件": ",".join(sorted(x["gde_pricelib_score"]["element"])),
    "指导价规则构件": ",".join(sorted(x["gde_pricelib_rule_score"]["element"])),
    "指导价构件属性": x["gde_pricelib_score"]["element_property"],
    "材料预期": ",".join(sorted(x["material_label"])) if x["material_label"] is not None else "",
    }
extra_dependencies = evaluator_pricelib_element_fixed_extract_evaluate, evaluator_test_data_repredict
keep_exists = True

[stage_test_data_fixed_evaluate]
class = DatasetValStage
dataset = test_data_fixed_for_export
output_fields = list_key, upper_item_name, item_name, item_feature, 分部分项预期, 构件预期, 模型构件, 指导价构件, 指导价构件属性, 材料预期
output_names = 清单id, 上级名称, 清单名称, 清单特征, 分部分项预期, 构件预期, 模型构件, 指导价构件, 指导价构件属性, 材料预期
save_res_path = /home/shilei/fbpmx/list_extract/pricelib_extract_formal_${date}/stage_test_data_fixed_evaluate.xlsx
map_dict = {"模型构件":"构件预期", "指导价构件": "构件预期", "指导价规则构件": "构件预期"}


####################### 对训练集做评估 ###########################


[evaluator_train_data_predict]
class = SimplePredictor
datasets = merge_fixed_train
models = pricelib_element_model5,pricelib_element_model6,pricelib_element_model7,pricelib_element_model8, gde_pricelib, gde_pricelib_rule
num_workers = 10


[dataset_train_data_for_export]
class = MapDataset
input = merge_fixed_train
expression = exec('import re; import uuid') or {
    "item_id": x["item_id"],
    "list_key": x["list_key"],
    "分部分项预期": x["分部分项预期"],
    "构件预期": x["构件预期"],
;     "模型构件": ",".join(sorted( [k for k, v in x["pricelib_element_model6_score"].items() if float(v)>=0.36] )),
    "模型构件": ",".join(sorted( [k for k, v in x["pricelib_element_model5_score"].items() if float(v)>=0.25] )),
    "指导价构件": ",".join(sorted(x["gde_pricelib_score"]["element"])),
    "指导价规则构件": ",".join(sorted(x["gde_pricelib_rule_score"]["element"])),
    "指导价构件属性": x["gde_pricelib_score"]["element_property"],
    "材料预期": x["材料预期"],
    }
extra_dependencies = evaluator_train_data_predict
keep_exists = True


[stage_train_data_export]
class = DatasetValStage
dataset = train_data_for_export
output_fields = list_key, upper_item_name, item_name, item_feature, 分部分项预期, 构件预期, 模型构件, 指导价构件, 指导价构件属性, 材料预期
output_names = 清单id, 上级名称, 清单名称, 清单特征, 分部分项预期, 构件预期, 模型构件, 指导价构件, 指导价构件属性, 材料预期
save_res_path = /home/shilei/fbpmx/list_extract/pricelib_extract_formal_${date}/stage_train_data_export.xlsx
map_dict = {"模型构件":"构件预期", "指导价构件": "构件预期", "指导价规则构件": "构件预期"}


################### 2025 新数据集 ##################

[dataset_raw_price_library_2025]
class = ReadExcelDataset
dir = /home/shilei/corpus/cost_split/pricelib_2025/中化学指导价-解析预期结果(工程数据分包指导价).xlsx,/home/shilei/corpus/cost_split/pricelib_2025/1-解析预期结果(工程数据分包指导价).xlsx, /home/shilei/corpus/cost_split/pricelib_2025/101-150_43-解析预期结果(工程数据分包指导价).xlsx, /home/shilei/corpus/cost_split/pricelib_2025/（101-150）7++-解析预期结果(工程数据分包指导价).xlsx, /home/shilei/corpus/cost_split/pricelib_2025/（101-150）9++-解析预期结果(工程数据分包指导价).xlsx, /home/shilei/corpus/cost_split/pricelib_2025/201-300_2-解析预期结果(工程数据分包指导价).xlsx, /home/shilei/corpus/cost_split/pricelib_2025/801-900_22-解析预期结果(工程数据分包指导价).xlsx, /home/shilei/corpus/cost_split/pricelib_2025/9-安装-解析预期结果(工程数据分包指导价).xlsx
header_row = 1

[dataset_raw_price_library_2025_trans]
class = MapDataset
input = raw_price_library_2025
expression = exec('import re; import uuid') or {"item_id": uuid.uuid4().hex,
    "list_key": str(x["filepath"]).split("/")[-1].split("-解析预期结果")[0] + "-" + str(x["uid"]),
    "item_name": x["名称"],
    "item_feature": x["项目特征"],
    "upper_item_name": x["分部全路径"],
    "pid": str(x["filepath"]).split("/")[-1].split("-解析预期结果")[0],
    "item_name_wk": f'清单名称: {x["名称"]}' if x["名称"] is not None else "",
    "item_feature_wk": f'清单特征: {x["项目特征"]}' if x["项目特征"] is not None else "",
    "upper_item_name_wk": f'全路径: {x["分部全路径"]}' if x["分部全路径"] is not None else "",
    "专业预期": x["专业"],
    "分部分项预期": x["成本分部分项"],
    "构件预期": ",".join(sorted(set(x["构件"].split(",")))) if x["构件"] is not None else "",
    "构件属性预期":  x["构件属性"],
    "材料预期": ",".join(sorted(set(x["材料"].split(",")))) if x["材料"] is not None else "",
    "材料属性预期":  x["材料属性"],
    "部位预期": ":".join(map(str, [a for a in [x["群体"], x["单体"], x["楼层"], x["流水段"], x["空间"], x["配套建筑"], x["标段"], x["地上地下"]] if a is not None])),
    }
keep_exists = True


[dataset_raw_price_library_2025_dedup]
class = AccumulateDataset
input = raw_price_library_2025_trans
deduplicate_by = list_key



[dataset_price_library_2025_partial]    ## GTJ 不解析分部分项
class = MapDataset
input = raw_price_library_2025_trans
expression = {"list_key": x["list_key"], "分部分项预期": x["分部分项预期"]}

[dataset_price_library_2025_partial_grouped]
class = GroupedDataset
input = price_library_2025_partial
groupby = list_key
value_key = 分部分项预期


[dataset_price_library_2025_element]
class = MapDataset
input = raw_price_library_2025_trans
expression = {"list_key": x["list_key"], "构件预期": x["构件预期"]}

[dataset_price_library_2025_element_grouped]
class = GroupedDataset
input = price_library_2025_element
groupby = list_key
value_key = 构件预期

[dataset_price_library_2025_material]
class = MapDataset
input = raw_price_library_2025_trans
expression = {"list_key": x["list_key"], "材料预期": x["材料预期"]}

[dataset_price_library_2025_material_grouped]
class = GroupedDataset
input = price_library_2025_material
groupby = list_key
value_key = 材料预期


[dataset_price_library_2025_mergeElement]
class = MergeIntoDataset
base_dataset = raw_price_library_2025_dedup
merge_datasets = price_library_2025_element_grouped
merge_type = only_replace
merge_key = list_key
merge_values = 构件预期
reset = False

[dataset_price_library_2025_mergeMaterial]
class = MergeIntoDataset
base_dataset = price_library_2025_mergeElement
merge_datasets = price_library_2025_material_grouped
merge_type = only_replace
merge_key = list_key
merge_values = 材料预期
reset = False


[dataset_price_library_2025]
class = MergeIntoDataset
base_dataset = price_library_2025_mergeMaterial
merge_datasets = price_library_2025_partial_grouped
merge_type = only_replace
merge_key = list_key
merge_values = 分部分项预期
reset = False

[dataset_price_library_2025_valid]
class = FilterDataset
input = price_library_2025
filters = x["专业预期"] in ["土建专业", "装修专业"]



################# 2025 新数据集 修改标注 #################

[dataset_raw_price_library_2025_fixed]
class = ReadExcelDataset
dir = /home/shilei/corpus/cost_split/price_library_2025_export_20241227.xlsx
sheet_names = 全数据
header_row = 0

[dataset_raw_price_library_2025_element_fixed]
class = FilterDataset
input = raw_price_library_2025_fixed
filters = "构件预期修改" in x and x["构件预期修改"] is not None

[dataset_price_library_2025_element_fixed]
class = MapDataset
input = raw_price_library_2025_element_fixed
expression = {"list_key": str(x["清单id"]),
    "构件预期": [] if x["构件预期修改"] == "无构件" else list(sorted(x["构件预期修改"].split(","))),
    }

[dataset_raw_price_library_2025_material_fixed]
class = FilterDataset
input = raw_price_library_2025_fixed
filters = "材料预期修改" in x and x["材料预期修改"] is not None

[dataset_price_library_2025_material_fixed]
class = MapDataset
input = raw_price_library_2025_material_fixed
expression = {"list_key": str(x["清单id"]),
    "材料预期": [] if x["材料预期修改"] == "无材料" else list(sorted(x["材料预期修改"].split(","))),
    }

[dataset_price_library_2025_element_fixed_label]
class = MergeIntoDataset
base_dataset = price_library_2025_valid
merge_datasets = price_library_2025_element_fixed
merge_type = only_replace
merge_key = list_key
merge_values = 构件预期
reset = False

[dataset_price_library_2025_all_fixed_label]
class = MergeIntoDataset
base_dataset = price_library_2025_element_fixed_label
merge_datasets = price_library_2025_material_fixed
merge_type = only_replace
merge_key = list_key
merge_values = 材料预期
reset = False

##################### 评估 ##########################

[evaluator_price_library_2025_predict]
class = SimplePredictor
datasets = price_library_2025_valid, price_library_2025_all_fixed_label
models = pricelib_element_model5, gde_pricelib, gde_pricelib_rule
num_workers = 5


[dataset_price_library_2025_for_export]
class = MapDataset
input = price_library_2025_valid
expression = exec('import re; import uuid') or {
    "item_id": x["item_id"],
    "list_key": x["list_key"],
    "分部分项预期": x["分部分项预期"],
    "构件预期": x["构件预期"],
    "模型构件": ",".join(sorted( [k for k, v in x["pricelib_element_model5_score"].items() if float(v)>=0.25] )),
    "指导价构件": ",".join(sorted(x["gde_pricelib_score"]["element"])),
    "指导价规则构件": ",".join(sorted(x["gde_pricelib_rule_score"]["element"])),
    "指导价构件属性": x["gde_pricelib_score"]["element_property"],
    "材料预期": x["材料预期"],
    }
extra_dependencies = evaluator_price_library_2025_predict
keep_exists = True


[stage_price_library_2025_export]
class = DatasetValStage
dataset = price_library_2025_for_export
output_fields = pid, list_key, upper_item_name, item_name, item_feature, 分部分项预期, 构件预期, 模型构件, 指导价构件, 指导价构件属性, 材料预期
output_names = 工程id, 清单id, 上级名称, 清单名称, 清单特征, 分部分项预期, 构件预期, 模型构件, 指导价构件, 指导价构件属性, 材料预期
save_res_path = /home/shilei/fbpmx/list_extract/pricelib_extract_formal_${date}/price_library_2025_export_${date}.xlsx
map_dict = {"模型构件":"构件预期", "指导价构件": "构件预期", "指导价规则构件": "构件预期"}



[dataset_price_library_2025_fixed_for_export]
class = MapDataset
input = price_library_2025_all_fixed_label
expression = exec('import re; import uuid') or {
    "item_id": x["item_id"],
    "list_key": x["list_key"],
    "分部分项预期": x["分部分项预期"],
    "构件预期": x["构件预期"],
    "模型构件": ",".join(sorted( [k for k, v in x["pricelib_element_model5_score"].items() if float(v)>=0.25] )),
    "指导价构件": ",".join(sorted(x["gde_pricelib_score"]["element"])),
    "指导价规则构件": ",".join(sorted(x["gde_pricelib_rule_score"]["element"])),
    "指导价构件属性": x["gde_pricelib_score"]["element_property"],
    "材料预期": x["材料预期"],
    }
extra_dependencies = evaluator_price_library_2025_predict
keep_exists = True


[stage_price_library_2025_fixed_export]
class = DatasetValStage
dataset = price_library_2025_fixed_for_export
output_fields = pid, list_key, upper_item_name, item_name, item_feature, 分部分项预期, 构件预期, 模型构件, 指导价构件, 指导价构件属性, 材料预期
output_names = 工程id, 清单id, 上级名称, 清单名称, 清单特征, 分部分项预期, 构件预期, 模型构件, 指导价构件, 指导价构件属性, 材料预期
save_res_path = /home/shilei/fbpmx/list_extract/pricelib_extract_formal_${date}/price_library_2025_fixed_export_${date}.xlsx
map_dict = {"模型构件":"构件预期", "指导价构件": "构件预期", "指导价规则构件": "构件预期"}


