[DEFAULT]
workspace = /home/shilei/fbpmx/list_extract/pricelib_extract_formal_${date}

[project]
actions = generate, evaluate, run
datasets = yunnan_price_library_data_expected, labor_decompose_standard_price_library_data_expected, price_library_add_data
evaluators = gde_predict, labor_decompose_standard_gde_predict, add_data_gde_predict, pricelib_element_extract_evaluate
stages = yunnan_price_library_data_export, labor_decompose_standard_price_library_data_export, price_library_add_data_evaluate, test_data_evaluate, train_data_export

[dataset_raw_yunnan_price_library_data]
class = ReadExcelDataset
; dir = /home/shilei/corpus/cost_split/工程数据分包指导价库_云南建投202408-解析结果(工程数据分包价格库).xlsx
dir = /home/shilei/corpus/cost_split/云南建投全量数据0826-解析结果(工程数据分包指导价).xlsx
header_row = 1


[dataset_yunnan_price_library_data_expected]
class = FilterDataset
input = raw_yunnan_price_library_data
filters = "uid.2" in x and x["uid.2"] is not None

[dataset_yunnan_price_library_data]
class = MapDataset
input = yunnan_price_library_data_expected
expression = exec('import re; import uuid') or {"item_id": uuid.uuid4().hex,
    "item_name": x["名称"],
    "item_feature": x["项目特征"],
    "upper_item_name": x["分部全路径"],
    "pid": "云南建设202408",
    "item_name_wk": f'清单名称: {x["名称"]}' if x["名称"] is not None else "",
    "item_feature_wk": f'清单特征: {x["项目特征"]}' if x["项目特征"] is not None else "",
    "upper_item_name_wk": f'全路径: {x["分部全路径"]}' if x["分部全路径"] is not None else "",
    }
keep_exists = True


[dataset_yunnan_price_library_data_for_export]
class = MapDataset
input = yunnan_price_library_data
expression = {"project_id": x["pid"],
    "指导价部位": ",".join(map(str, x["yunnan_gde_pricelib_score"]["group"]+x["yunnan_gde_pricelib_score"]["building"]+x["yunnan_gde_pricelib_score"]["floor"]+x["yunnan_gde_pricelib_score"]["section"]+x["yunnan_gde_pricelib_score"]["space"]+x["yunnan_gde_pricelib_score"]["supporting"]+x["yunnan_gde_pricelib_score"]["lot"]+x["yunnan_gde_pricelib_score"]["up-or-down"])),
    "指导价构件": ",".join(sorted(x["yunnan_gde_pricelib_score"]["element"])),
    "指导价构件属性": x["yunnan_gde_pricelib_score"]["element_property"],
    "指导价材料": ",".join(sorted(x["yunnan_gde_pricelib_score"]["material"])),
    "指导价材料属性": x["yunnan_gde_pricelib_score"]["material_property"],

    "指导价专业": ",".join(map(str, sorted(x["yunnan_gde_pricelib_score"]["specialty"]))),
    "指导价新专业": ",".join(map(str, sorted(x["yunnan_gde_pricelib_score"]["specialty_new"]))),
    "指导价分部分项": ",".join(map(str, sorted(x["yunnan_gde_pricelib_score"]["cost-partial"]))),

    "指导价材料实体": ",".join(sorted(set([a["内容"] for a in x["yunnan_gde_pricelib_score"]["ner_entities"]["name_entity"]+x["yunnan_gde_pricelib_score"]["ner_entities"]["att_entity"] if "材料" in a["类型"] and a["被排除"] is False]))),
    "指导价构件实体": ",".join(sorted(set([a["内容"] for a in x["yunnan_gde_pricelib_score"]["ner_entities"]["name_entity"]+x["yunnan_gde_pricelib_score"]["ner_entities"]["att_entity"] if a["类型"]=="构件" and a["被排除"] is False]))),

    "部位预期": ":".join(map(str, [a for a in [x["群体.1"], x["单体.1"], x["楼层.1"], x["流水段.1"], x["空间.1"], x["配套建筑.1"], x["标段.1"], x["地上地下.1"]] if a is not None])),
    "构件预期": ",".join(sorted(x["构件.1"].split(","))) if x["构件.1"] is not None else "",
    "构件属性预期": x["构件属性.1"],
    "材料预期": ",".join(sorted(x["材料.1"].split(","))) if x["材料.1"] is not None else "",
    "材料属性预期": x["材料属性.1"],
    "专业预期": x["专业.1"],
    "分部分项预期": x["成本分部分项.1"],

    "模型构件": ",".join(sorted( [k for k, v in x["GTJ_formal_element_extract_model_fixed_score"].items() if float(v)>=0.48] )),
    }
extra_dependencies = evaluator_gde_predict
keep_exists = True


[stage_yunnan_price_library_data_export]
class = DatasetValStage
dataset = yunnan_price_library_data_for_export
output_fields = project_id, uid, upper_item_name, item_name, item_feature, 指导价部位, 指导价专业, 指导价分部分项, 指导价构件, 指导价构件属性, 指导价材料, 指导价材料属性, 部位预期, 专业预期, 分部分项预期, 构件预期, 构件属性预期, 材料预期, 材料属性预期, 指导价构件实体, 指导价材料实体, 指导价新专业, 模型构件
output_names = 工程ID, 指导价ID, 上级指导价名称, 指导价名称, 指导价特征, 指导价部位, 指导价专业, 指导价分部分项, 指导价构件, 指导价构件属性, 指导价材料, 指导价材料属性, 部位预期, 专业预期, 分部分项预期, 构件预期, 构件属性预期, 材料预期, 材料属性预期, 指导价构件实体, 指导价材料实体, 指导价新专业, 模型构件
save_res_path = /home/shilei/fbpmx/list_extract/pricelib_extract_formal_${date}/yunnan_price_library_data_export.xlsx
map_dict = {"指导价专业":"专业预期", "指导价分部分项":"分部分项预期", "指导价构件":"构件预期", "指导价构件属性":"构件属性预期", "指导价材料":"材料预期", "指导价材料属性":"材料属性预期", "指导价工序":"工序预期", "指导价空间":"空间预期", "指导价配套建筑":"配套建筑预期", "指导价地上地下":"地上地下预期", "模型构件": "构件预期"}



###############################

[dataset_raw_labor_decompose_standard_price_library_data]
class = ReadExcelDataset
; dir = /home/shilei/corpus/cost_split/指导价验证集-劳务分包标准-解析结果(工程数据分包指导价).xlsx
dir = /home/shilei/corpus/cost_split/y分包指导价清单-解析结果(工程数据分包指导价).xlsx
header_row = 1


[dataset_labor_decompose_standard_price_library_data_expected]
class = FilterDataset
input = raw_labor_decompose_standard_price_library_data
filters = "uid.2" in x and x["uid.2"] is not None

[dataset_labor_decompose_standard_price_library_data]
class = MapDataset
input = labor_decompose_standard_price_library_data_expected
expression = exec('import re; import uuid') or {"item_id": uuid.uuid4().hex,
    "item_name": x["名称"],
    "item_feature": x["项目特征"],
    "upper_item_name": x["分部全路径"],
    "pid": "劳务分包标准",
    "item_name_wk": f'清单名称: {x["名称"]}' if x["名称"] is not None else "",
    "item_feature_wk": f'清单特征: {x["项目特征"]}' if x["项目特征"] is not None else "",
    "upper_item_name_wk": f'全路径: {x["分部全路径"]}' if x["分部全路径"] is not None else "",
    }
keep_exists = True

[dataset_labor_decompose_standard_price_library_data_for_export]
class = MapDataset
input = labor_decompose_standard_price_library_data
expression = {"project_id": x["pid"],
    "指导价部位": ",".join(map(str, x["labor_decompose_standard_gde_pricelib_score"]["group"]+x["labor_decompose_standard_gde_pricelib_score"]["building"]+x["labor_decompose_standard_gde_pricelib_score"]["floor"]+x["labor_decompose_standard_gde_pricelib_score"]["section"]+x["labor_decompose_standard_gde_pricelib_score"]["space"]+x["labor_decompose_standard_gde_pricelib_score"]["supporting"]+x["labor_decompose_standard_gde_pricelib_score"]["lot"]+x["labor_decompose_standard_gde_pricelib_score"]["up-or-down"])),
    "指导价构件": ",".join(sorted(x["labor_decompose_standard_gde_pricelib_score"]["element"])),
    "指导价构件属性": x["labor_decompose_standard_gde_pricelib_score"]["element_property"],
    "指导价材料": ",".join(sorted(x["labor_decompose_standard_gde_pricelib_score"]["material"])),
    "指导价材料属性": x["labor_decompose_standard_gde_pricelib_score"]["material_property"],

    "指导价专业": ",".join(map(str, sorted(x["labor_decompose_standard_gde_pricelib_score"]["specialty"]))),
    "指导价新专业": ",".join(map(str, sorted(x["labor_decompose_standard_gde_pricelib_score"]["specialty_new"]))),
    "指导价分部分项": ",".join(map(str, sorted(x["labor_decompose_standard_gde_pricelib_score"]["cost-partial"]))),

    "指导价材料实体": ",".join(sorted(set([a["内容"] for a in x["labor_decompose_standard_gde_pricelib_score"]["ner_entities"]["name_entity"]+x["labor_decompose_standard_gde_pricelib_score"]["ner_entities"]["att_entity"] if "材料" in a["类型"] and a["被排除"] is False]))),
    "指导价构件实体": ",".join(sorted(set([a["内容"] for a in x["labor_decompose_standard_gde_pricelib_score"]["ner_entities"]["name_entity"]+x["labor_decompose_standard_gde_pricelib_score"]["ner_entities"]["att_entity"] if a["类型"]=="构件" and a["被排除"] is False]))),

    "部位预期": ":".join(map(str, [a for a in [x["群体.1"], x["单体.1"], x["楼层.1"], x["流水段.1"], x["空间.1"], x["配套建筑.1"], x["标段.1"], x["地上地下.1"]] if a is not None])),
    "构件预期": ",".join(sorted(x["构件.1"].split(","))) if x["构件.1"] is not None else "",
    "构件属性预期": x["构件属性.1"],
    "材料预期": ",".join(sorted(x["材料.1"].split(","))) if x["材料.1"] is not None else "",
    "材料属性预期": x["材料属性.1"],
    "专业预期": x["专业.1"],
    "分部分项预期": x["成本分部分项.1"],

    "模型构件": ",".join(sorted( [k for k, v in x["GTJ_formal_element_extract_model_fixed_score"].items() if float(v)>=0.48] )),
    }
extra_dependencies = evaluator_labor_decompose_standard_gde_predict
keep_exists = True

[stage_labor_decompose_standard_price_library_data_export]
class = DatasetValStage
dataset = labor_decompose_standard_price_library_data_for_export
output_fields = project_id, uid, upper_item_name, item_name, item_feature, 指导价部位, 指导价专业, 指导价分部分项, 指导价构件, 指导价构件属性, 指导价材料, 指导价材料属性, 部位预期, 专业预期, 分部分项预期, 构件预期, 构件属性预期, 材料预期, 材料属性预期, 指导价构件实体, 指导价材料实体, 指导价新专业, 模型构件
output_names = 工程ID, 指导价ID, 上级指导价名称, 指导价名称, 指导价特征, 指导价部位, 指导价专业, 指导价分部分项, 指导价构件, 指导价构件属性, 指导价材料, 指导价材料属性, 部位预期, 专业预期, 分部分项预期, 构件预期, 构件属性预期, 材料预期, 材料属性预期, 指导价构件实体, 指导价材料实体, 指导价新专业, 模型构件
save_res_path = /home/shilei/fbpmx/list_extract/pricelib_extract_formal_${date}/labor_decompose_standard_price_library_data_export.xlsx
map_dict = {"指导价专业":"专业预期", "指导价分部分项":"分部分项预期", "指导价构件":"构件预期", "指导价构件属性":"构件属性预期", "指导价材料":"材料预期", "指导价材料属性":"材料属性预期", "指导价工序":"工序预期", "指导价空间":"空间预期", "指导价配套建筑":"配套建筑预期", "指导价地上地下":"地上地下预期", "模型构件": "构件预期"}


###############################
[dataset_formal_data_train_fixed_label]
class = ExistsDataset
workspace = /home/shilei/fbpmx/list_extract/list_extract_analysis_for_gtj_fixlabel_element_20241129
reset = False

; from /home/shilei/fbpmx/list_extract/list_extract_analysis_for_gtj_fixlabel_element_20241129/model_GTJ_formal_extract_model_fixed
; "GTJ_formal_element_extract_model_fixed": {
;       "summary": {
;         "count": 7380,
;         "evaluate_count": 7380,
;         "max_acc": 0.9146,
;         "max_t": 0.48
;       }
;     },
; "GTJ_formal_element_extract_model_fixed": {
;       "summary": {
;         "count": 2735,
;         "evaluate_count": 2735,
;         "max_acc": 0.9444,
;         "max_t": 0.52
;       }
;     },

[model_GTJ_formal_extract_model_fixed]
class = MultiHeadMultiLabelClassificationModel
data = formal_data_train_fixed_label
bert_base = /home/shilei/model_repository/chinese-roberta-wwm-ext_ft
text_key = item_name_wk
extra_feats = upper_item_name_wk, item_feature_wk
labels_delimeter = |
label_key = "构件": "element_label"
labels = "构件"::"地形|道路|场地|降水井|土石方|支撑架|基坑围护|桩|砖砌挖孔桩护壁|基坑支护|地堰|花架|挡鼠板|坐凳|脚手架|竖井|车位|幕墙|屋面|消防水池|走道|地沟|采光顶|蓄水池|油池|门窗|泥浆池|止水帷幕|屋架|台阶|栏杆扶手|散水|组合栏板扶手|阳台|设备基础|挑耳|衰变池|泛水|吸水槽|地下连续墙导墙|飘窗|老虎窗|压顶|汽车坡道|防水导墙|无障碍坡道|墙|成孔芯模|空挡|板|结构缝|排水沟|基础|后浇带|洞口|梁|组合结构墙|楼梯|栏板|保温墙|挑檐板|地基|墙垛|后塞口|雨篷|暗柱|柱|斜杆|变形缝|水簸箕|隅撑|栓钉|钢柱|钢梁|钢板|钢架|钢檩条|钢拉索|钢结构连接节点|钢楼梯|钢门柱|钢窗柱|钢平台|钢墙架|设备钢支座|牛腿|桩尖|爬梯|组合结构柱|组合结构梁|组合结构楼板|车棚|楼地面|踢脚线|装饰成品构件|固定脚套|墙面|钢板墙板|墙裙|天棚|装饰线条|护角|地台|建筑地坪|场地地形|土方|石方|边桩|钢节点|支护桩|支撑梁|钢格构柱|钢支撑|桩间挂网|护坡|斜支撑|地下连续墙|电梯井|楼梯井|车挡|屋面变形缝|女儿墙|排水板|反檐|垃圾道、通风道、烟道|走道板|门|卷帘动力装置|窗|窗台板|门联窗|门套、窗套|门框|栏杆|扶手|预制阳台|砖胎膜|预制飘窗|结构墙|挡土墙|人防门框墙|钢墙|隔墙|砌体墙|挡水墙|预制墙|现浇板|沟盖板、井盖板、井圈|预制板|构造板|凸窗侧板|钢板楼板|板缝|褥垫层|基础梁|集水坑|垫层|筏板基础|条形基础|独立基础|桩承台|桩基|板洞|墙洞|壁龛|门窗洞口|检修口|灯孔|结构梁|连梁|过梁|圈梁|构造梁|梁加腋|暗梁|预制梁|预制过梁|直形梯段|螺旋梯段|预制楼梯|天然地基|换填地基|预制雨篷|结构柱|构造柱|柱墩|柱帽|柱脚|砌体柱|预制柱|实腹钢梁|翼缘板|钢屋架|钢网架|钢桁架|钢托架|楼地面变形缝|过门石|固定件|内墙面|外墙面|墙面变形缝|柱面|吊顶|梁面|余方|钢桩|土钉墙|锚杆(锚索)|垃圾道|通风道|烟道|沟盖板|井盖板|井圈|电梯坑|桩头|桩端|门洞口|窗洞口|抱框柱|内墙裙|外墙裙|GFRP土钉|截水沟|电缆沟|围墙"
num_labels = 1
learning_rate = 1.0e-4
num_epochs = 200
train_ratio = 0.85
batch_size = 128
max_seq_length = 128
re_predict = True

[model_GTJ_formal_element_extract_model_fixed]
class = CalculateModel
models = GTJ_formal_extract_model_fixed
expression = GTJ_formal_extract_model_fixed["构件"]
re_predict = True


[evaluator_gde_predict]
class = SimplePredictor
datasets = yunnan_price_library_data
models = yunnan_gde_pricelib, GTJ_formal_element_extract_model_fixed
num_workers = 8


[evaluator_labor_decompose_standard_gde_predict]
class = SimplePredictor
datasets = labor_decompose_standard_price_library_data
models = labor_decompose_standard_gde_pricelib, GTJ_formal_element_extract_model_fixed
num_workers = 8


[model_yunnan_gde_pricelib]
class = GDETPriceLibServiceModel
task_type = 清单
item_name_key = item_name
item_feature_key = item_feature
upper_item_name_key = upper_item_name
need_fields = item_name, item_feature, upper_item_name


[model_labor_decompose_standard_gde_pricelib]
class = GDETPriceLibServiceModel
task_type = 清单
item_name_key = item_name
item_feature_key = item_feature
upper_item_name_key = upper_item_name
need_fields = item_name, item_feature, upper_item_name

[model_gde_pricelib]
class = GDETPriceLibServiceModel
task_type = 清单
item_name_key = item_name
item_feature_key = item_feature
upper_item_name_key = upper_item_name
need_fields = item_name, item_feature, upper_item_name

############### 训练集 ##########################

[dataset_price_library_add_raw_data]
class = ReadExcelDataset
dir = /home/shilei/corpus/cost_split/指导价验证集-2-解析结果(工程数据分包指导价).xlsx, /home/shilei/corpus/cost_split/指导价验证数据集_0814-复核-解析结果(工程数据分包指导价).xlsx
header_row = 1

[dataset_price_library_add_data_expected]
class = FilterDataset
input = price_library_add_raw_data
filters = "uid.2" in x and x["uid.2"] is not None

[dataset_price_library_add_data]
class = MapDataset
input = price_library_add_data_expected
expression = exec('import re; import uuid') or {"item_id": uuid.uuid4().hex,
    "item_name": x["名称"],
    "item_feature": x["项目特征"],
    "upper_item_name": x["分部全路径"],
    "pid": str(x["filepath"]).split("/")[-1].split("-解析结果")[0],
    "item_name_wk": f'清单名称: {x["名称"]}' if x["名称"] is not None else "",
    "item_feature_wk": f'清单特征: {x["项目特征"]}' if x["项目特征"] is not None else "",
    "upper_item_name_wk": f'全路径: {x["分部全路径"]}' if x["分部全路径"] is not None else "",
    }
keep_exists = True


[evaluator_add_data_gde_predict]
class = SimplePredictor
datasets = price_library_add_data
models = gde_pricelib, GTJ_formal_element_extract_model_fixed
num_workers = 8


[dataset_price_library_add_data_for_evaluate]
class = MapDataset
input = price_library_add_data
expression = {"project_id": x["pid"],
    "指导价专业": ",".join(map(str, sorted(x["gde_pricelib_score"]["specialty"]))),
    "指导价分部分项": ",".join(map(str, sorted(x["gde_pricelib_score"]["cost-partial"]))),
    "指导价构件": ",".join(map(str, sorted(x["gde_pricelib_score"]["element"]))),
    "指导价构件属性": ",".join([f"{m[0]}:{m[1]}" for m in sorted({k:','.join(map(str, [sub_v['std'] for sub_v in v])) if isinstance(v, list) else f"{k}:{v['std']}" for p in x["gde_pricelib_score"]["element_property"] for k, v in eval(p).items()}.items(), key=lambda x: x[0])]),
    "指导价材料": ",".join(map(str, sorted(x["gde_pricelib_score"]["material"]))),
    "指导价材料属性": ",".join([f"{k}:{','.join(map(str, sorted(v)))}" if isinstance(v, list) else f"{k}:{v}" for p in x["gde_pricelib_score"]["material_property"] for k, v in eval(p).items()]),
    "指导价工序": ",".join(map(str, sorted(x["gde_pricelib_score"]["sequence"]))),
    "指导价空间": ",".join(map(str, sorted(x["gde_pricelib_score"]["space"]))).replace(":", ""),
    "指导价配套建筑": ",".join(map(str, sorted(x["gde_pricelib_score"]["supporting"]))).replace(":", ""),
    "指导价地上地下": ",".join(map(str, sorted(x["gde_pricelib_score"]["up-or-down"]))).replace(":", ""),


    "专业预期": ",".join(sorted(x["专业.1"].split(","))) if x["专业.1"] is not None else "",
    "分部分项预期": ",".join(sorted(x["成本分部分项.1"].split(","))) if x["成本分部分项.1"] is not None else "",
    "构件预期": ",".join(sorted(x["构件.1"].split(","))) if x["构件.1"] is not None else "",
    "构件属性预期": ",".join(f"{k}:{v}"for k, v in sorted(json.loads(x["构件属性.1"]).items(), key=lambda x: x[0])) if x["构件属性.1"] is not None else "",
    "材料预期": ",".join(sorted(x["材料.1"].split(","))) if x["材料.1"] is not None else "",
    "材料属性预期": ",".join(f"{k}:{v}"for k, v in sorted(json.loads(x["材料属性.1"]).items(), key=lambda x: x[0])) if x["材料属性.1"] is not None else "",
    "工序预期": ",".join(sorted(x["工序.1"].split(","))) if x["工序.1"] is not None else "",
    "空间预期": ",".join(sorted(x["空间.1"].split(","))) if x["空间.1"] is not None else "",
    "配套建筑预期": ",".join(sorted(x["配套建筑.1"].split(","))) if x["配套建筑.1"] is not None else "",
    "地上地下预期": ",".join(sorted(x["地上地下.1"].split(","))) if x["地上地下.1"] is not None else "",

    "模型构件": ",".join(sorted( [k for k, v in x["GTJ_formal_element_extract_model_fixed_score"].items() if float(v)>=0.48] )),
    }
extra_dependencies = evaluator_add_data_gde_predict
keep_exists = True

[stage_price_library_add_data_evaluate]
class = DatasetValStage
dataset = price_library_add_data_for_evaluate
output_fields = project_id, uid, upper_item_name, item_name, item_feature, 指导价专业, 专业预期, 指导价分部分项, 分部分项预期, 指导价构件, 构件预期, 指导价构件属性, 构件属性预期, 指导价材料, 材料预期, 指导价材料属性, 材料属性预期, 指导价工序, 工序预期, 指导价空间, 空间预期, 指导价配套建筑, 配套建筑预期, 指导价地上地下, 地上地下预期, 模型构件
output_names = 工程ID, 指导价ID, 上级指导价名称, 指导价名称, 指导价特征, 指导价专业, 专业预期, 指导价分部分项, 分部分项预期, 指导价构件, 构件预期, 指导价构件属性, 构件属性预期, 指导价材料, 材料预期, 指导价材料属性, 材料属性预期, 指导价工序, 工序预期, 指导价空间, 空间预期, 指导价配套建筑, 配套建筑预期, 指导价地上地下, 地上地下预期, 模型构件
save_res_path = /home/shilei/fbpmx/list_extract/pricelib_extract_formal_${date}/price_library_add_data_evaluate.xlsx
map_dict = {"指导价专业":"专业预期", "指导价分部分项":"分部分项预期", "指导价构件":"构件预期", "指导价构件属性":"构件属性预期", "指导价材料":"材料预期", "指导价材料属性":"材料属性预期", "指导价工序":"工序预期", "指导价空间":"空间预期", "指导价配套建筑":"配套建筑预期", "指导价地上地下":"地上地下预期", "模型构件": "构件预期"}

########################################################################################################################

[dataset_merge]
class = MergeDataset
datasets = yunnan_price_library_data, price_library_add_data, labor_decompose_standard_price_library_data

[dataset_merge_label]
class = MapDataset
input = merge
expression = {
    "upper_item_name_dropout": x["upper_item_name_wk"],
    "element_label": list(sorted(x["构件.1"].split(","))) if x["构件.1"] is not None and len(x["构件.1"])>0 else [],
    "material_label": list(sorted(x["材料.1"].split(","))) if x["材料.1"] is not None and len(x["材料.1"])>0 else []
    }
keep_exists = True

[dataset_merge_train]
class = FilterDataset
input = merge_label
filters = ("item_id" in x) and ( int(x["item_id"][-5:],16) % 10 >= 2 )

[dataset_merge_test]
class = FilterDataset
input = merge_label
filters = ("item_id" in x) and ( int(x["item_id"][-5:],16) % 10 < 2 )


[model_pricelib_model]
class = MultiHeadMultiLabelClassificationModel
data = merge_train
bert_base = /home/shilei/fbpmx/list_extract/list_extract_analysis_for_gtj_fixlabel_element_20241129/model_GTJ_formal_extract_model_fixed/model
text_key = item_name_wk
extra_feats = upper_item_name_wk, item_feature_wk
labels_delimeter = |
label_key = "构件": "element_label"
labels = "构件"::"地形|道路|场地|降水井|土石方|支撑架|基坑围护|桩|砖砌挖孔桩护壁|基坑支护|地堰|花架|挡鼠板|坐凳|脚手架|竖井|车位|幕墙|屋面|消防水池|走道|地沟|采光顶|蓄水池|油池|门窗|泥浆池|止水帷幕|屋架|台阶|栏杆扶手|散水|组合栏板扶手|阳台|设备基础|挑耳|衰变池|泛水|吸水槽|地下连续墙导墙|飘窗|老虎窗|压顶|汽车坡道|防水导墙|无障碍坡道|墙|成孔芯模|空挡|板|结构缝|排水沟|基础|后浇带|洞口|梁|组合结构墙|楼梯|栏板|保温墙|挑檐板|地基|墙垛|后塞口|雨篷|暗柱|柱|斜杆|变形缝|水簸箕|隅撑|栓钉|钢柱|钢梁|钢板|钢架|钢檩条|钢拉索|钢结构连接节点|钢楼梯|钢门柱|钢窗柱|钢平台|钢墙架|设备钢支座|牛腿|桩尖|爬梯|组合结构柱|组合结构梁|组合结构楼板|车棚|楼地面|踢脚线|装饰成品构件|固定脚套|墙面|钢板墙板|墙裙|天棚|装饰线条|护角|地台|建筑地坪|场地地形|土方|石方|边桩|钢节点|支护桩|支撑梁|钢格构柱|钢支撑|桩间挂网|护坡|斜支撑|地下连续墙|电梯井|楼梯井|车挡|屋面变形缝|女儿墙|排水板|反檐|垃圾道、通风道、烟道|走道板|门|卷帘动力装置|窗|窗台板|门联窗|门套、窗套|门框|栏杆|扶手|预制阳台|砖胎膜|预制飘窗|结构墙|挡土墙|人防门框墙|钢墙|隔墙|砌体墙|挡水墙|预制墙|现浇板|沟盖板、井盖板、井圈|预制板|构造板|凸窗侧板|钢板楼板|板缝|褥垫层|基础梁|集水坑|垫层|筏板基础|条形基础|独立基础|桩承台|桩基|板洞|墙洞|壁龛|门窗洞口|检修口|灯孔|结构梁|连梁|过梁|圈梁|构造梁|梁加腋|暗梁|预制梁|预制过梁|直形梯段|螺旋梯段|预制楼梯|天然地基|换填地基|预制雨篷|结构柱|构造柱|柱墩|柱帽|柱脚|砌体柱|预制柱|实腹钢梁|翼缘板|钢屋架|钢网架|钢桁架|钢托架|楼地面变形缝|过门石|固定件|内墙面|外墙面|墙面变形缝|柱面|吊顶|梁面|余方|钢桩|土钉墙|锚杆(锚索)|垃圾道|通风道|烟道|沟盖板|井盖板|井圈|电梯坑|桩头|桩端|门洞口|窗洞口|抱框柱|内墙裙|外墙裙|GFRP土钉|截水沟|电缆沟|围墙"
num_labels = 1
learning_rate = 5.0e-5
num_epochs = 200
train_ratio = 0.85
batch_size = 128
max_seq_length = 128
re_predict = True

[model_pricelib_model2]
class = MultiHeadMultiLabelClassificationModel
data = merge_train
bert_base = /home/shilei/fbpmx/list_extract/list_extract_analysis_for_gtj_fixlabel_element_20241129/model_GTJ_formal_extract_model_fixed/model
text_key = item_name_wk
extra_feats = upper_item_name_wk, item_feature_wk
labels_delimeter = |
label_key = "构件": "element_label"
labels = "构件"::"地形|道路|场地|降水井|土石方|支撑架|基坑围护|桩|砖砌挖孔桩护壁|基坑支护|地堰|花架|挡鼠板|坐凳|脚手架|竖井|车位|幕墙|屋面|消防水池|走道|地沟|采光顶|蓄水池|油池|门窗|泥浆池|止水帷幕|屋架|台阶|栏杆扶手|散水|组合栏板扶手|阳台|设备基础|挑耳|衰变池|泛水|吸水槽|地下连续墙导墙|飘窗|老虎窗|压顶|汽车坡道|防水导墙|无障碍坡道|墙|成孔芯模|空挡|板|结构缝|排水沟|基础|后浇带|洞口|梁|组合结构墙|楼梯|栏板|保温墙|挑檐板|地基|墙垛|后塞口|雨篷|暗柱|柱|斜杆|变形缝|水簸箕|隅撑|栓钉|钢柱|钢梁|钢板|钢架|钢檩条|钢拉索|钢结构连接节点|钢楼梯|钢门柱|钢窗柱|钢平台|钢墙架|设备钢支座|牛腿|桩尖|爬梯|组合结构柱|组合结构梁|组合结构楼板|车棚|楼地面|踢脚线|装饰成品构件|固定脚套|墙面|钢板墙板|墙裙|天棚|装饰线条|护角|地台|建筑地坪|场地地形|土方|石方|边桩|钢节点|支护桩|支撑梁|钢格构柱|钢支撑|桩间挂网|护坡|斜支撑|地下连续墙|电梯井|楼梯井|车挡|屋面变形缝|女儿墙|排水板|反檐|垃圾道、通风道、烟道|走道板|门|卷帘动力装置|窗|窗台板|门联窗|门套、窗套|门框|栏杆|扶手|预制阳台|砖胎膜|预制飘窗|结构墙|挡土墙|人防门框墙|钢墙|隔墙|砌体墙|挡水墙|预制墙|现浇板|沟盖板、井盖板、井圈|预制板|构造板|凸窗侧板|钢板楼板|板缝|褥垫层|基础梁|集水坑|垫层|筏板基础|条形基础|独立基础|桩承台|桩基|板洞|墙洞|壁龛|门窗洞口|检修口|灯孔|结构梁|连梁|过梁|圈梁|构造梁|梁加腋|暗梁|预制梁|预制过梁|直形梯段|螺旋梯段|预制楼梯|天然地基|换填地基|预制雨篷|结构柱|构造柱|柱墩|柱帽|柱脚|砌体柱|预制柱|实腹钢梁|翼缘板|钢屋架|钢网架|钢桁架|钢托架|楼地面变形缝|过门石|固定件|内墙面|外墙面|墙面变形缝|柱面|吊顶|梁面|余方|钢桩|土钉墙|锚杆(锚索)|垃圾道|通风道|烟道|沟盖板|井盖板|井圈|电梯坑|桩头|桩端|门洞口|窗洞口|抱框柱|内墙裙|外墙裙|GFRP土钉|截水沟|电缆沟|围墙"
num_labels = 1
learning_rate = 5.0e-5
num_epochs = 200
train_ratio = 0.85
batch_size = 128
max_seq_length = 128
re_predict = True

[model_pricelib_model3]
class = MultiHeadMultiLabelClassificationModel
data = merge_train
bert_base = /home/shilei/fbpmx/list_extract/list_extract_analysis_for_gtj_fixlabel_element_20241129/model_GTJ_formal_extract_model_fixed/model
text_key = item_name_wk
extra_feats = upper_item_name_wk, item_feature_wk
labels_delimeter = |
label_key = "构件": "element_label"
labels = "构件"::"地形|道路|场地|降水井|土石方|支撑架|基坑围护|桩|砖砌挖孔桩护壁|基坑支护|地堰|花架|挡鼠板|坐凳|脚手架|竖井|车位|幕墙|屋面|消防水池|走道|地沟|采光顶|蓄水池|油池|门窗|泥浆池|止水帷幕|屋架|台阶|栏杆扶手|散水|组合栏板扶手|阳台|设备基础|挑耳|衰变池|泛水|吸水槽|地下连续墙导墙|飘窗|老虎窗|压顶|汽车坡道|防水导墙|无障碍坡道|墙|成孔芯模|空挡|板|结构缝|排水沟|基础|后浇带|洞口|梁|组合结构墙|楼梯|栏板|保温墙|挑檐板|地基|墙垛|后塞口|雨篷|暗柱|柱|斜杆|变形缝|水簸箕|隅撑|栓钉|钢柱|钢梁|钢板|钢架|钢檩条|钢拉索|钢结构连接节点|钢楼梯|钢门柱|钢窗柱|钢平台|钢墙架|设备钢支座|牛腿|桩尖|爬梯|组合结构柱|组合结构梁|组合结构楼板|车棚|楼地面|踢脚线|装饰成品构件|固定脚套|墙面|钢板墙板|墙裙|天棚|装饰线条|护角|地台|建筑地坪|场地地形|土方|石方|边桩|钢节点|支护桩|支撑梁|钢格构柱|钢支撑|桩间挂网|护坡|斜支撑|地下连续墙|电梯井|楼梯井|车挡|屋面变形缝|女儿墙|排水板|反檐|垃圾道、通风道、烟道|走道板|门|卷帘动力装置|窗|窗台板|门联窗|门套、窗套|门框|栏杆|扶手|预制阳台|砖胎膜|预制飘窗|结构墙|挡土墙|人防门框墙|钢墙|隔墙|砌体墙|挡水墙|预制墙|现浇板|沟盖板、井盖板、井圈|预制板|构造板|凸窗侧板|钢板楼板|板缝|褥垫层|基础梁|集水坑|垫层|筏板基础|条形基础|独立基础|桩承台|桩基|板洞|墙洞|壁龛|门窗洞口|检修口|灯孔|结构梁|连梁|过梁|圈梁|构造梁|梁加腋|暗梁|预制梁|预制过梁|直形梯段|螺旋梯段|预制楼梯|天然地基|换填地基|预制雨篷|结构柱|构造柱|柱墩|柱帽|柱脚|砌体柱|预制柱|实腹钢梁|翼缘板|钢屋架|钢网架|钢桁架|钢托架|楼地面变形缝|过门石|固定件|内墙面|外墙面|墙面变形缝|柱面|吊顶|梁面|余方|钢桩|土钉墙|锚杆(锚索)|垃圾道|通风道|烟道|沟盖板|井盖板|井圈|电梯坑|桩头|桩端|门洞口|窗洞口|抱框柱|内墙裙|外墙裙|GFRP土钉|截水沟|电缆沟|围墙"
num_labels = 1
learning_rate = 5.0e-5
num_epochs = 200
train_ratio = 0.85
batch_size = 256
max_seq_length = 128
re_predict = True


[model_pricelib_model4]
class = MultiHeadMultiLabelClassificationModel
data = merge_train
bert_base = /home/shilei/fbpmx/list_extract/list_extract_analysis_for_gtj_fixlabel_element_20241129/model_GTJ_formal_extract_model_fixed/model
text_key = item_name_wk
extra_feats = upper_item_name_wk, item_feature_wk
labels_delimeter = |
label_key = "构件": "element_label"
labels = "构件"::"地形|道路|场地|降水井|土石方|支撑架|基坑围护|桩|砖砌挖孔桩护壁|基坑支护|地堰|花架|挡鼠板|坐凳|脚手架|竖井|车位|幕墙|屋面|消防水池|走道|地沟|采光顶|蓄水池|油池|门窗|泥浆池|止水帷幕|屋架|台阶|栏杆扶手|散水|组合栏板扶手|阳台|设备基础|挑耳|衰变池|泛水|吸水槽|地下连续墙导墙|飘窗|老虎窗|压顶|汽车坡道|防水导墙|无障碍坡道|墙|成孔芯模|空挡|板|结构缝|排水沟|基础|后浇带|洞口|梁|组合结构墙|楼梯|栏板|保温墙|挑檐板|地基|墙垛|后塞口|雨篷|暗柱|柱|斜杆|变形缝|水簸箕|隅撑|栓钉|钢柱|钢梁|钢板|钢架|钢檩条|钢拉索|钢结构连接节点|钢楼梯|钢门柱|钢窗柱|钢平台|钢墙架|设备钢支座|牛腿|桩尖|爬梯|组合结构柱|组合结构梁|组合结构楼板|车棚|楼地面|踢脚线|装饰成品构件|固定脚套|墙面|钢板墙板|墙裙|天棚|装饰线条|护角|地台|建筑地坪|场地地形|土方|石方|边桩|钢节点|支护桩|支撑梁|钢格构柱|钢支撑|桩间挂网|护坡|斜支撑|地下连续墙|电梯井|楼梯井|车挡|屋面变形缝|女儿墙|排水板|反檐|垃圾道、通风道、烟道|走道板|门|卷帘动力装置|窗|窗台板|门联窗|门套、窗套|门框|栏杆|扶手|预制阳台|砖胎膜|预制飘窗|结构墙|挡土墙|人防门框墙|钢墙|隔墙|砌体墙|挡水墙|预制墙|现浇板|沟盖板、井盖板、井圈|预制板|构造板|凸窗侧板|钢板楼板|板缝|褥垫层|基础梁|集水坑|垫层|筏板基础|条形基础|独立基础|桩承台|桩基|板洞|墙洞|壁龛|门窗洞口|检修口|灯孔|结构梁|连梁|过梁|圈梁|构造梁|梁加腋|暗梁|预制梁|预制过梁|直形梯段|螺旋梯段|预制楼梯|天然地基|换填地基|预制雨篷|结构柱|构造柱|柱墩|柱帽|柱脚|砌体柱|预制柱|实腹钢梁|翼缘板|钢屋架|钢网架|钢桁架|钢托架|楼地面变形缝|过门石|固定件|内墙面|外墙面|墙面变形缝|柱面|吊顶|梁面|余方|钢桩|土钉墙|锚杆(锚索)|垃圾道|通风道|烟道|沟盖板|井盖板|井圈|电梯坑|桩头|桩端|门洞口|窗洞口|抱框柱|内墙裙|外墙裙|GFRP土钉|截水沟|电缆沟|围墙"
num_labels = 1
learning_rate = 5.0e-5
num_epochs = 200
train_ratio = 0.85
batch_size = 256
max_seq_length = 128
re_predict = True


[model_pricelib_element_model]
class = CalculateModel
models = pricelib_model
expression = pricelib_model["构件"]
re_predict = True


[model_pricelib_element_model2]
class = CalculateModel
models = pricelib_model2
expression = pricelib_model2["构件"]
re_predict = True


[model_pricelib_element_model3]
class = CalculateModel
models = pricelib_model3
expression = pricelib_model3["构件"]
re_predict = True


[model_pricelib_element_model4]
class = CalculateModel
models = pricelib_model4
expression = pricelib_model4["构件"]
re_predict = True


[evaluator_pricelib_element_extract_evaluate]
class= MultiLabelClassificationTBEvaluator
dataset = merge_test
models = pricelib_element_model,pricelib_element_model2,pricelib_element_model3,pricelib_element_model4
categories = 地形|道路|场地|降水井|土石方|支撑架|基坑围护|桩|砖砌挖孔桩护壁|基坑支护|地堰|花架|挡鼠板|坐凳|脚手架|竖井|车位|幕墙|屋面|消防水池|走道|地沟|采光顶|蓄水池|油池|门窗|泥浆池|止水帷幕|屋架|台阶|栏杆扶手|散水|组合栏板扶手|阳台|设备基础|挑耳|衰变池|泛水|吸水槽|地下连续墙导墙|飘窗|老虎窗|压顶|汽车坡道|防水导墙|无障碍坡道|墙|成孔芯模|空挡|板|结构缝|排水沟|基础|后浇带|洞口|梁|组合结构墙|楼梯|栏板|保温墙|挑檐板|地基|墙垛|后塞口|雨篷|暗柱|柱|斜杆|变形缝|水簸箕|隅撑|栓钉|钢柱|钢梁|钢板|钢架|钢檩条|钢拉索|钢结构连接节点|钢楼梯|钢门柱|钢窗柱|钢平台|钢墙架|设备钢支座|牛腿|桩尖|爬梯|组合结构柱|组合结构梁|组合结构楼板|车棚|楼地面|踢脚线|装饰成品构件|固定脚套|墙面|钢板墙板|墙裙|天棚|装饰线条|护角|地台|建筑地坪|场地地形|土方|石方|边桩|钢节点|支护桩|支撑梁|钢格构柱|钢支撑|桩间挂网|护坡|斜支撑|地下连续墙|电梯井|楼梯井|车挡|屋面变形缝|女儿墙|排水板|反檐|垃圾道、通风道、烟道|走道板|门|卷帘动力装置|窗|窗台板|门联窗|门套、窗套|门框|栏杆|扶手|预制阳台|砖胎膜|预制飘窗|结构墙|挡土墙|人防门框墙|钢墙|隔墙|砌体墙|挡水墙|预制墙|现浇板|沟盖板、井盖板、井圈|预制板|构造板|凸窗侧板|钢板楼板|板缝|褥垫层|基础梁|集水坑|垫层|筏板基础|条形基础|独立基础|桩承台|桩基|板洞|墙洞|壁龛|门窗洞口|检修口|灯孔|结构梁|连梁|过梁|圈梁|构造梁|梁加腋|暗梁|预制梁|预制过梁|直形梯段|螺旋梯段|预制楼梯|天然地基|换填地基|预制雨篷|结构柱|构造柱|柱墩|柱帽|柱脚|砌体柱|预制柱|实腹钢梁|翼缘板|钢屋架|钢网架|钢桁架|钢托架|楼地面变形缝|过门石|固定件|内墙面|外墙面|墙面变形缝|柱面|吊顶|梁面|余方|钢桩|土钉墙|锚杆(锚索)|垃圾道|通风道|烟道|沟盖板|井盖板|井圈|电梯坑|桩头|桩端|门洞口|窗洞口|抱框柱|内墙裙|外墙裙|GFRP土钉|截水沟|电缆沟|围墙
categories_delimeter = |
label_key = element_label
save_res_path = /home/shilei/fbpmx/list_extract/pricelib_extract_formal_${date}/pricelib_element_extract_evaluate.xlsx


[dataset_test_data_for_export]
class = MapDataset
input = merge_test
expression = {
    "item_id": x["item_id"],
    "list_key": str(x["filepath"]).split("/")[-1].split("-解析结果")[0] + "-" + str(x["uid"]),
    "分部分项预期": ",".join(list(sorted(x["成本分部分项.1"].split(",")))) if x["成本分部分项.1"] is not None and len(x["成本分部分项.1"])>0 else "",
    "构件预期": ",".join(sorted(x["element_label"])) if x["element_label"] is not None else "",
    "模型构件": ",".join(sorted( [k for k, v in x["pricelib_element_model4_score"].items() if float(v)>=0.5] )),
    "材料预期": ",".join(list(sorted(x["材料.1"].split(",")))) if x["材料.1"] is not None and len(x["材料.1"])>0 else "",
    }
extra_dependencies = evaluator_pricelib_element_extract_evaluate
keep_exists = True

[stage_test_data_evaluate]
class = DatasetValStage
dataset = test_data_for_export
output_fields = list_key, upper_item_name, item_name, item_feature, 分部分项预期, 构件预期, 模型构件, 材料预期
output_names = 清单id, 上级名称, 清单名称, 清单特征, 分部分项预期, 构件预期, 模型构件, 材料预期
save_res_path = /home/shilei/fbpmx/list_extract/pricelib_extract_formal_${date}/stage_test_data_evaluate.xlsx
map_dict = {"模型构件":"构件预期"}

####################### 对训练集做评估 ###########################


[evaluator_train_data_predict]
class = SimplePredictor
datasets = merge_train
models = pricelib_element_model,pricelib_element_model2,pricelib_element_model3,pricelib_element_model4
num_workers = 10


[dataset_train_data_for_export]
class = MapDataset
input = merge_train
expression = exec('import re; import uuid') or {
    "item_id": x["item_id"],
    "list_key": str(x["filepath"]).split("/")[-1].split("-解析结果")[0] + "-" + str(x["uid"]),
    "分部分项预期": ",".join(list(sorted(x["成本分部分项.1"].split(",")))) if x["成本分部分项.1"] is not None and len(x["成本分部分项.1"])>0 else "",
    "构件预期": ",".join(sorted(x["element_label"])) if x["element_label"] is not None else "",
    "模型构件": ",".join(sorted( [k for k, v in x["pricelib_element_model4_score"].items() if float(v)>=0.5] )),
    "材料预期": ",".join(list(sorted(x["材料.1"].split(",")))) if x["材料.1"] is not None and len(x["材料.1"])>0 else "",
    }
extra_dependencies = evaluator_train_data_predict
keep_exists = True


[stage_train_data_export]
class = DatasetValStage
dataset = train_data_for_export
output_fields = list_key, upper_item_name, item_name, item_feature, 分部分项预期, 构件预期, 模型构件, 材料预期
output_names = 清单id, 上级名称, 清单名称, 清单特征, 分部分项预期, 构件预期, 模型构件, 材料预期
save_res_path = /home/shilei/fbpmx/list_extract/pricelib_extract_formal_${date}/stage_train_data_export.xlsx
map_dict = {"模型构件":"构件预期"}