[DEFAULT]
workspace = /home/shilei/fbpmx/list_extract/list_extract_for_price_library_connect_${date}

[project]
actions = generate,evaluate
datasets = price_library_connect_data
evaluators = cde_predict

[dataset_raw_price_library_connect_data]
class = ReadFileDataset
format = json
dir = /home/shilei/corpus/cost_split/price_library_connect_data.json


[dataset_price_library_connect_data]
class = MapDataset
input = raw_price_library_connect_data
expression = exec('import re; import uuid') or {"item_id": uuid.uuid4().hex,
    "item_name": x["bq_item_content"],
    "item_feature": x["bq_item_spec"] if x["bq_item_spec"] is not None else "",
    "upper_item_name": x["bq_item_title_with_upper"],
    "price_item_name": x["Description"],
    "price_item_feature": x["Features"] if x["Features"] is not None else ""}
keep_exists = True


[evaluator_cde_predict]
class = SimplePredictor
datasets = price_library_connect_data
models = list_cde, list_tjqd2, price_cde, price_tjqd2
num_workers = 4


[model_list_cde]
class = CdeServiceModel
task_type = 清单
item_name_key = item_name
item_feature_key = item_feature
upper_item_name_key = upper_item_name
need_fields = item_name,item_feature,upper_item_name

[model_list_tjqd2]
class = GDETJQD2ServiceModel
task_type = 清单
item_name_key = item_name
item_feature_key = item_feature
upper_item_name_key = upper_item_name
need_fields = item_name,item_feature,upper_item_name


[model_price_cde]
class = CdeServiceModel
task_type = 清单
item_name_key = price_item_name
item_feature_key = price_item_feature
need_fields = price_item_name, price_item_feature

[model_price_tjqd2]
class = GDETJQD2ServiceModel
task_type = 清单
item_name_key = price_item_name
item_feature_key = price_item_feature
need_fields = price_item_name, price_item_feature


