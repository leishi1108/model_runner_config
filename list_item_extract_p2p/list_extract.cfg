[DEFAULT]
workspace = /home/shilei/fbpmx/list_extract/list_extract_${date}

[project]
actions = generate
datasets = GTJ_list_data, budget_list_data, budget_list_element_test, budget_list_element_train, budget_list_material_test, budget_list_material_train, GTJ_list_element_data, GTJ_list_material_data

[dataset_raw_list_data]
class = ReadFileDataset
format = json
dir = /home/shilei/corpus/cost_split/list_extract_expected_data.json


[dataset_list_data]
class = MapDataset
input = raw_list_data
expression = exec('import re; import uuid') or {"project_id": uuid.uuid3(uuid.NAMESPACE_DNS, str(x["filepath"]).split("/")[-1].split("-解析预期结果")[0]).hex, "list_key": str(x["filepath"]).split("/")[-1].split("-解析预期结果")[0] + "-" + str(x["ID"])}
keep_exists = True


[dataset_GTJ_list_data]
class = FilterDataset
input = list_data
filters = "单位工程名称" in x

[dataset_budget_list_data]
class = FilterDataset
input = list_data
filters = "单位工程名称" not in x


############ GTJ清单解析 ############

[dataset_GTJ_list_feature]
class = MapDataset
input = GTJ_list_data
expression = {"list_key": x["list_key"], "ID": x["ID"], "filepath": x["filepath"], "单位工程名称": x["单位工程名称"],
              "全路径": x["全路径"], "清单编码": x["清单编码"], "清单名称": x["清单名称"], "清单特征": x["清单特征"], "单位": x["单位"],
              "item_name": x["清单名称"], "item_feature": x["清单特征"], "upper_item_name": x["全路径"],
              "project_name": x["单位工程名称"], "project_id": x["project_id"]}


[dataset_GTJ_list_feature_dedup]
class = AccumulateDataset
input = GTJ_list_feature
deduplicate_by = list_key


############ 成本科目预算清单解析 ############

[dataset_budget_list_feature]
class = MapDataset
input = budget_list_data
expression = {"list_key": x["list_key"], "ID": x["ID"], "filepath": x["filepath"], "项目ID": x["项目ID"],
              "清单编码": x["清单编码"], "清单名称": x["清单名称"], "项目特征": x["项目特征"], "全路径": x["全路径"], "工程名称": x["工程名称"],
              "item_name": x["清单名称"], "item_feature": x["项目特征"], "upper_item_name": x["全路径"],
              "project_name": x["工程名称"], "project_id": x["project_id"]}


[dataset_budget_list_feature_dedup]
class = AccumulateDataset
input = budget_list_feature
deduplicate_by = list_key

############ 预期结果解析 ############

[dataset_budget_list_partial]    ## GTJ 不解析分部分项
class = MapDataset
input = budget_list_data
expression = {"list_key": x["list_key"], "成本分部分项": x["成本分部分项"]}

[dataset_list_element]
class = MapDataset
input = list_data
expression = {"list_key": x["list_key"], "构件": x["构件"]}

[dataset_list_material]
class = MapDataset
input = list_data
expression = {"list_key": x["list_key"], "材料": x["材料"]}

[dataset_list_element_grouped]
class = GroupedDataset
input = list_element
groupby = list_key
value_key = 构件

[dataset_list_material_grouped]
class = GroupedDataset
input = list_material
groupby = list_key
value_key = 材料

[dataset_budget_list_partial_grouped]
class = GroupedDataset
input = budget_list_partial
groupby = list_key
value_key = 成本分部分项

############ 构件 ############

[dataset_GTJ_list_element_data]
class = MergeIntoDataset
base_dataset = GTJ_list_feature_dedup
merge_datasets = list_element_grouped
merge_type = only_replace
merge_key = list_key
merge_values = 构件
reset = False

[dataset_budget_list_element_data]
class = MergeIntoDataset
base_dataset = budget_list_feature_dedup
merge_datasets = list_element_grouped
merge_type = only_replace
merge_key = list_key
merge_values = 构件
reset = False

[dataset_budget_list_element_test]
class = FilterDataset
input = budget_list_element_data
filters = ("project_id" in x) and ( int(x["project_id"]) % 10 < 2 )

[dataset_budget_list_element_train]
class = FilterDataset
input = budget_list_element_data
filters = ("project_id" in x) and ( int(x["project_id"]) % 10 >= 2 )

############ 材料 ############

[dataset_GTJ_list_material_data]
class = MergeIntoDataset
base_dataset = GTJ_list_feature_dedup
merge_datasets = list_material_grouped
merge_type = only_replace
merge_key = list_key
merge_values = 材料
reset = False

[dataset_budget_list_material_data]
class = MergeIntoDataset
base_dataset = budget_list_feature_dedup
merge_datasets = list_material_grouped
merge_type = only_replace
merge_key = list_key
merge_values = 材料
reset = False


[dataset_budget_list_material_test]
class = FilterDataset
input = budget_list_material_data
filters = ("project_id" in x) and ( int(x["project_id"]) % 10 < 2 )

[dataset_budget_list_material_train]
class = FilterDataset
input = budget_list_material_data
filters = ("project_id" in x) and ( int(x["project_id"]) % 10 >= 2 )


############ 构件评估 ############

[model_cde]
class = CdeServiceModel
task_type = 清单
item_name_key = item_name
item_feature_key = item_feature
upper_item_name_key = upper_item_name
project_name_key = project_name
need_fields = item_name,item_feature,upper_item_name,project_name


[model_tjqd2]
class = GDETJQD2ServiceModel
task_type = 清单
item_name_key = item_name
item_feature_key = item_feature
upper_item_name_key = upper_item_name
project_name_key = project_name
need_fields = item_name,item_feature,upper_item_name,project_name