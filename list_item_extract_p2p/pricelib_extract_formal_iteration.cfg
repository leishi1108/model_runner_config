[DEFAULT]
workspace = /home/shilei/fbpmx/list_extract/pricelib_extract_formal_iteration_${date}

[project]
actions = generate
datasets = raw_price_library_data

###############################

[dataset_raw_price_library_data]
class = ReadExcelDataset
dir = /home/shilei/corpus/cost_split/分包指导价数据集.xlsx
header_row = 0


[dataset_price_library_data]
class = MapDataset
input = raw_price_library_data
expression = {"item_id": uuid.uuid3(uuid.NAMESPACE_DNS, str(x["清单id"])).hex,
    "list_key": str(x["filepath"]).split("/")[-1].split("-解析结果")[0] + "-" + str(x["uid"]),
    "item_name": x["名称"],
    "item_feature": x["项目特征"],
    "upper_item_name": x["分部全路径"],
    "pid": "云南建设202408",
    "item_name_wk": f'清单名称: {x["名称"]}' if x["名称"] is not None else "",
    "item_feature_wk": f'清单特征: {x["项目特征"]}' if x["项目特征"] is not None else "",
    "upper_item_name_wk": f'全路径: {x["分部全路径"]}' if x["分部全路径"] is not None else "",

    "部位预期": ":".join(map(str, [a for a in [x["群体.1"], x["单体.1"], x["楼层.1"], x["流水段.1"], x["空间.1"], x["配套建筑.1"], x["标段.1"], x["地上地下.1"]] if a is not None])),
    "构件预期": ",".join(sorted(x["构件.1"].split(","))) if x["构件.1"] is not None else "",
    "材料预期": ",".join(sorted(x["材料.1"].split(","))) if x["材料.1"] is not None else "",
    "专业预期": x["专业.1"],
    "分部分项预期": x["成本分部分项.1"],
    "构件属性预期":  x["构件属性.1"],
    "材料属性预期":  x["材料属性.1"],
    }
keep_exists = True

