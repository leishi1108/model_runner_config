[DEFAULT]
workspace = /home/shilei/fbpmx/element_p2p_cross_validation/GTJ_history60w_element_p2p_cross_validation_${date}

[project]
actions = generate, evaluate, run
datasets = history60w_data, history60w_data_sample
evaluators = cross_validation_predict
stages = history60w_data_sample_element_cross_validation


[dataset_raw_history60w_data]
class = ReadFileDataset
format = json
dir = /data/yujh/llm/LLaMA-Factory-main/data/list_item_subject_data_train_prompt_with_brief_filter.json


[dataset_history60w_data]
class = MapDataset
input = raw_history60w_data
expression = exec('import re; import uuid') or {
        "project_id": str(x["project_id"]),
        "list_key": str(x["bq_item_key"]),
        "item_name": str(x["bq_item_content"]),
        "item_feature": str(x["bq_item_spec"]) if x["bq_item_spec"] is not None else "",
        "upper_item_name": str(x["bq_item_title_with_upper"]).replace("\n", "").replace("\r", "").replace("\t", "") if x["bq_item_title_with_upper"] is not None else "",
        "project_name": "",
        "task_type": "清单",
    }
keep_exists = True


[dataset_history60w_data_sample]
class = FilterDataset
input = history60w_data
filters = ("project_id" in x) and ( int(x["project_id"][-5:],16) % 10 < 1 )

[model_ernie35_element_e2e]
class = Ernie35ElementE2EModel
url = http://10.0.79.55:9001
item_name_key = item_name
item_feature_key = item_feature
upper_item_name_key = upper_item_name
project_name_key = project_name
task_type_key = task_type
need_fields = item_name, item_feature, upper_item_name, project_name, task_type
re_predict = False

[model_doubao_element_e2e]
class = DoubaoElementE2EModel
url = http://10.0.79.55:9001
item_name_key = item_name
item_feature_key = item_feature
upper_item_name_key = upper_item_name
project_name_key = project_name
task_type_key = task_type
need_fields = item_name, item_feature, upper_item_name, project_name, task_type
re_predict = False

[model_tjqd2]
class = GDETJQD2ServiceModel
task_type = 清单
item_name_key = item_name
item_feature_key = item_feature
upper_item_name_key = upper_item_name
project_name_key = project_name
need_fields = item_name,item_feature,upper_item_name,project_name
re_predict = False

[evaluator_cross_validation_predict]
class = SimplePredictor
datasets = history60w_data_sample
models = ernie35_element_e2e, doubao_element_e2e, tjqd2
num_workers = 3


[dataset_history60w_data_sample_prediction]
class = MapDataset
input = history60w_data_sample
expression = {
    "构件": ",".join(sorted(x["tjqd2_score"]["element"])) if x["tjqd2_score"] is not None and "element" in x["tjqd2_score"] else "",
    "大模型1构件": list(sorted(set([str(m).split("/")[-1] for m in x["ernie35_element_e2e_score"]["category"] if len(str(m).strip())>0 ]))) if x["ernie35_element_e2e_score"] is not None and x["ernie35_element_e2e_score"]["category"] is not None and len(x["ernie35_element_e2e_score"]["category"]) > 0 else [],
    "大模型2构件": list(sorted(set([str(m).split("/")[-1] for m in x["doubao_element_e2e_score"]["category"] if len(str(m).strip())>0]))) if x["doubao_element_e2e_score"] is not None and x["doubao_element_e2e_score"]["category"] is not None and len(x["doubao_element_e2e_score"]["category"]) > 0 else []}
keep_exists = True
extra_dependencies = evaluator_cross_validation_predict

[stage_history60w_data_sample_element_cross_validation]
class = CrossValStage
dataset = history60w_data_sample_prediction
category_names = 大模型1构件, 大模型2构件
with_label = False
consistency_sample_rate = 0.2
random_seed = 488
keep_fields = list_key, task_type, project_name, upper_item_name, item_feature, item_name, 构件, 大模型1构件, 大模型2构件
save_res_path = /home/shilei/fbpmx/element_p2p_cross_validation/GTJ_history60w_element_p2p_cross_validation_${date}/history60w_data_sample_element_cross_validation.xlsx
