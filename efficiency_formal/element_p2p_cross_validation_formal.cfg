[DEFAULT]
workspace = /home/shilei/fbpmx/element_p2p_cross_validation/element_p2p_cross_validation_${date}

[project]
actions = generate, evaluate, run
datasets = formal_data_mergeAll, formal_data_test
evaluators = cross_validation_predict
stages = element_cross_validation


[dataset_raw_formal_data]
class = ReadFileDataset
format = json
dir = /home/shilei/corpus/cost_split/GTJ_formal_data_expected_data.json

[dataset_formal_data]
class = MapDataset
input = raw_formal_data
expression = exec('import re; import uuid') or {"project_code": uuid.uuid3(uuid.NAMESPACE_DNS, str(x["filepath"]).split("/")[-1].split("-解析预期结果")[0]).hex, "project_id": str(x["filepath"]).split("/")[-1].split("-解析预期结果")[0], "list_key": str(x["filepath"]).split("/")[-1].split("-解析预期结果")[0] + "-" + str(x["ID"])}
keep_exists = True


[dataset_formal_data_feature]
class = MapDataset
input = formal_data
expression = {"project_id": x["project_id"], "project_code": x["project_code"], "list_key": x["list_key"], "ID": x["ID"],
              "filepath": x["filepath"], "工程名称": x["单位工程名称"], "全路径": x["全路径"], "清单编码": x["清单编码"],
              "清单名称": x["清单名称"], "清单特征": x["清单特征"], "单位": x["单位"], "item_name": x["清单名称"] if x["清单名称"] is not None else "",
              "item_feature": x["清单特征"] if x["清单特征"] is not None else "", "upper_item_name": x["全路径"] if x["全路径"] is not None else "",
              "project_name": x["单位工程名称"] if x["单位工程名称"] is not None else "", "task_type": "清单"}


[dataset_formal_data_feature_dedup]
class = AccumulateDataset
input = formal_data_feature
deduplicate_by = list_key

[dataset_formal_partial]
class = MapDataset
input = formal_data
expression = {"list_key": x["list_key"], "成本分部分项": x["成本分部分项"]}

[dataset_formal_partial_grouped]
class = GroupedDataset
input = formal_partial
groupby = list_key
value_key = 成本分部分项

[dataset_formal_element]
class = MapDataset
input = formal_data
expression = {"list_key": x["list_key"], "构件": x["构件"]}

[dataset_formal_element_grouped]
class = GroupedDataset
input = formal_element
groupby = list_key
value_key = 构件

[dataset_formal_material]
class = MapDataset
input = formal_data
expression = {"list_key": x["list_key"], "材料": x["材料"]}

[dataset_formal_material_grouped]
class = GroupedDataset
input = formal_material
groupby = list_key
value_key = 材料

[dataset_formal_data_mergeElement]
class = MergeIntoDataset
base_dataset = formal_data_feature_dedup
merge_datasets = formal_element_grouped
merge_type = only_replace
merge_key = list_key
merge_values = 构件
reset = False

[dataset_formal_data_mergeMaterial]
class = MergeIntoDataset
base_dataset = formal_data_mergeElement
merge_datasets = formal_material_grouped
merge_type = only_replace
merge_key = list_key
merge_values = 材料
reset = False

[dataset_formal_data_mergeAll]
class = MergeIntoDataset
base_dataset = formal_data_mergeMaterial
merge_datasets = formal_partial_grouped
merge_type = only_replace
merge_key = list_key
merge_values = 成本分部分项
reset = False

[dataset_formal_data_test]
class = FilterDataset
input = formal_data_mergeAll
filters = ("project_code" in x) and ( int(x["project_code"][-5:],16) % 10 < 2 )


[dataset_formal_data_train]
class = FilterDataset
input = formal_data_mergeAll
filters = ("project_code" in x) and ( int(x["project_code"][-5:],16) % 10 >= 2 )


[model_ernie35_element_e2e]
class = Ernie35ElementE2EModel
url = http://10.0.79.55:9001
item_name_key = item_name
item_feature_key = item_feature
upper_item_name_key = upper_item_name
project_name_key = project_name
task_type_key = task_type
need_fields = item_name, item_feature, upper_item_name, project_name, task_type
re_predict = False

[model_doubao_element_e2e]
class = DoubaoElementE2EModel
url = http://10.0.79.55:9001
item_name_key = item_name
item_feature_key = item_feature
upper_item_name_key = upper_item_name
project_name_key = project_name
task_type_key = task_type
need_fields = item_name, item_feature, upper_item_name, project_name, task_type
re_predict = False


[evaluator_cross_validation_predict]
class = SimplePredictor
datasets = formal_data_test
models = ernie35_element_e2e, doubao_element_e2e
num_workers = 2

[dataset_test_prediction]
class = MapDataset
input = item_merge_2
expression = {"大模型1构件": x["ernie35_element_e2e_score"]["category"] if x["ernie35_element_e2e_score"] is not None and len(x["ernie35_element_e2e_score"]["category"]) > 0 else "", "大模型2构件": x["doubao_element_e2e_score"]["category"] if x["doubao_element_e2e_score"] is not None and len(x["doubao_element_e2e_score"]["category"]) > 0 else ""}
keep_exists = True
extra_dependencies = evaluator_cross_validation_predict

[stage_element_cross_validation]
class = CrossValStage
dataset = test_prediction
category_names = 大模型1构件, 大模型2构件
with_labels = False
consistency_sample_rate = 0.2
keep_fields = list_key, task_type, project_name, upper_item_name, item_feature, item_name, 大模型1构件, 大模型2构件
save_res_path = /home/shilei/fbpmx/element_p2p_cross_validation/element_p2p_cross_validation_${date}/element_cross_validation_${date}.xlsx
