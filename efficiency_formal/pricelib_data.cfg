[DEFAULT]
workspace = /home/shilei/fbpmx/efficiency_formal/pricelib_data_${date}

[project]
actions = generate
datasets = test_data, test_grouped_pid, test_pid_cnt, test_data_list_cnt, test_data_list_cnt_valid, pricelib_train, pricelib_test


[dataset_raw_test_data]
class = ReadRawExcelDataset
dir = /home/shilei/corpus/cost_split/指导价导出

[dataset_raw_test_valid]
class = FilterDataset
input = raw_test_data
filters = "caption" in x and x["caption"] is not None and not isinstance(x["caption"], float)

[dataset_test_data]
class = MapDataset
input = raw_test_valid
expression = exec('import re; import uuid') or {"item_id": uuid.uuid4().hex,
    "list_key": "_".join(str(x["filepath"]).split("/")[-3:]).split(".xlsx")[0] + "-" + str(x["uid"]),
    "pid": "_".join(str(x["filepath"]).split("/")[-3:]).split(".xlsx")[0],
    "project_code": uuid.uuid3(uuid.NAMESPACE_DNS, "_".join(str(x["filepath"]).split("/")[-3:]).split(".xlsx")[0]).hex,
    "item_name": x["caption"],
    "item_feature": x["spec"],
    "upper_item_name": x["full_name"],
    "item_name_wk": f'清单名称: {x["caption"]}' if x["caption"] is not None else "",
    "item_feature_wk": f'清单特征: {x["spec"]}' if x["spec"] is not None else "",
    "upper_item_name_wk": f'全路径: {x["full_name"]}' if x["full_name"] is not None else "",
    "item_name_replace": re.sub(r'[0-9]+', '数', x["caption"]) if x["caption"] is not None else "",
    }
keep_exists = True

[dataset_test_grouped_pid]
class = GroupedDataset
input = test_data
groupby = pid
value_key = item_name_replace

[dataset_test_pid_cnt]
class = MapDataset
input = test_grouped_pid
expression = exec('import re; import uuid') or {"pid_name_cnt": len(x["item_name_replace"].strip().split(","))}
keep_exists = True


[dataset_test_data_list_cnt]
class = MergeIntoDataset
base_dataset = test_data
merge_datasets = test_pid_cnt
merge_type = only_replace
merge_key = pid
merge_values = pid_name_cnt
reset = False


[dataset_test_data_list_cnt_valid]
class = FilterDataset
input = test_data_list_cnt
filters = "pid_name_cnt" in x and x["pid_name_cnt"] >= 500

[dataset_pricelib_train]
class = FilterDataset
input = test_data_list_cnt_valid
filters = ("project_code" in x) and ( int(x["project_code"][-5:],16) % 10 >= 1 )

[dataset_pricelib_test]
class = FilterDataset
input = test_data_list_cnt_valid
filters = ("project_code" in x) and ( int(x["project_code"][-5:],16) % 10 < 1 )

############## 预标注 ##############

; 构件
; (trainer) shilei@bj-C11-79:~/fbpmx/list_extract/pricelib_extract_formal_20241227$ cat evaluator_pricelib_element_fixed_extract_evaluate/info.json
; {
;   "status": "finished",
;   "model_metrics": {
;     "pricelib_element_model5": {
;       "summary": {
;         "count": 720,
;         "evaluate_count": 720,
;         "max_acc": 0.8764,
;         "max_t": 0.25
;       }
;     },
;
; (trainer) shilei@bj-C11-79:~/fbpmx/list_extract/pricelib_extract_material_formal_20241230$ cat evaluator_pricelib_material_fixed_extract_evaluate/info.json
; {
;   "status": "finished",
;   "model_metrics": {
;     },
;     "pricelib_material_model2": {
;       "summary": {
;         "count": 734,
;         "evaluate_count": 734,
;         "max_acc": 0.8079,
;         "max_t": 0.61
;       }
;     },