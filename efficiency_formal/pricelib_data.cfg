[DEFAULT]
workspace = /home/shilei/fbpmx/efficiency_formal/pricelib_data_${date}

[project]
actions = generate
datasets = test_data, test_grouped_pid


[dataset_raw_test_data]
class = ReadRawExcelDataset
dir = /home/shilei/corpus/cost_split/指导价导出


[dataset_test_data]
class = MapDataset
input = raw_test_data
expression = exec('import re; import uuid') or {"item_id": uuid.uuid4().hex,
    "list_key": "_".join(str(x["filepath"]).split("/")[-3:]).split(".xlsx")[0] + "-" + str(x["uid"]),
    "pid": "_".join(str(x["filepath"]).split("/")[-3:]).split(".xlsx")[0],
    "item_name": x["caption"],
    "item_feature": x["spec"],
    "upper_item_name": x["full_name"],
    "item_name_wk": f'清单名称: {x["caption"]}' if x["caption"] is not None else "",
    "item_feature_wk": f'清单特征: {x["spec"]}' if x["spec"] is not None else "",
    "upper_item_name_wk": f'全路径: {x["full_name"]}' if x["full_name"] is not None else "",
    "item_name_replace": re.sub(r'[0-9]+', '数', x["caption"]) if x["caption"] is not None else "",
    }
keep_exists = True

[dataset_test_valid]
class = FilterDataset
input = test_data
filters = "caption" in x and x["caption"] is not None

[dataset_test_grouped_pid]
class = GroupedDataset
input = test_valid
groupby = pid
value_key = list_key