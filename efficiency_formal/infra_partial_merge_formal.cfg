[DEFAULT]
workspace = /home/shilei/fbpmx/infra_partial_cross_validation/infra_partial_merge_${date}

[project]
actions = generate
datasets = infra_partial_source_data_input, element_review_data
evaluators = cross_validation_predict
; stages = element_cross_validation

; [stages]
; keys = infra_partial_merge



[dataset_infra_partial_cross_validation]
class = ExistsDataset
workspace = /home/shilei/fbpmx/infra_partial_cross_validation/infra_partial_cross_validation_20240715
reset = False

[dataset_infra_partial_source_data_input]
class = FilterDataset
input = infra_partial_cross_validation
filters = True

; [dataset_element_source_data_input_map]
; class = MapDataset
; input = infra_partial_source_data_input
; expression = {'item_id': int(x['item_id']),'item_name': x['itemName'], 'llm_element_std_1': x['llm_element_category'],'llm_element_std_2': x['cde_element_category'],'anno': x['llm_element_category']}
; keep_exists = False
; reset = True

; {"_index_": 0, "id": 408636, "tenantId": 869440119900160, "projectId": 906150584039424, "code": "419-1-a", "name": "单孔钢筋混凝土圆管涵Φ1000（K0+167,180度基础）", "fullPath": "400|桥梁、涵洞$$419|圆管涵及倒虹吸管涵$$419-1|单孔钢筋混凝土圆管涵", "itemFeatures": "", "unit": "m", "item_id": "ed2403955cfb41998ede18846a3437c5", "item_name": "单孔钢筋混凝土圆管涵Φ1000（K0+167,180度基础）", "item_feature": "400|桥梁、涵洞$$419|圆管涵及倒虹吸管涵$$419-1|单孔钢筋混凝土圆管涵", "task_type": "基建清单", "原清单行名称": "单孔钢筋混凝土圆管涵Φ1000（K0+167,180度基础）", "原清单层级": "400|桥梁、涵洞$$419|圆管涵及倒虹吸管涵$$419-1|单孔钢筋混凝土圆管涵", "llm_lite_infra_partial_score": {"category": "圆管涵|基础", "chain_res": "匹配标签：圆管涵, 基础。", "pure_llm_res": "圆管涵, 基础。"}, "llm_speed_infra_partial_score": {"category": "圆管涵", "chain_res": "单孔钢筋混凝土圆管涵。", "pure_llm_res": "单孔钢筋混凝土圆管涵。"}, "大模型1分部分项": "圆管涵", "大模型2分部分项": "圆管涵|基础"}

[dataset_element_review_data]
class = ReadExcelDataset
format = xlsx
dir = /home/shilei/fbpmx/infra_partial_cross_validation/infra_partial_cross_validation_20240715/infra_partial_cross_validation_20240715_labeled.xlsx
reset = True
sheet_names = 待标注数据

; [dataset_element_review_data_map]
; class = MapDataset
; input = element_review_data
; ; expression = exec('import uuid') or {'item_id': x["item_id"], 'uid': int(x["清单ID"]), 'itemName': x.get("清单名称", ""), 'upperItemName': x.get("upperItemName", ""), 'projectName': x.get("projectName", ""), 'itemProperty': x.get("itemProperty", ""), 'cde_element_category': x.get("GDE分部分项", ""), 'llm_element_category': x.get("大模型分部分项", ""), 'anno': x.get("人工标注", "")}
; expression = exec('import uuid') or {'uid': int(x["清单ID"]), 'item_name': x.get("清单名称", ""), 'llm_element_std_2': x.get("GDE构件", ""), 'llm_element_std_1': x.get("大模型构件", ""), 'anno': x.get("人工标注", "") if x.get("人工标注", "") != "/" else ""}
; keep_exists = False
; reset = True


; [dataset_element_soucre_review_data_merge]
; class = MergeIntoDataset
; base_dataset = element_source_data_input_map
; merge_datasets = element_review_data_map
; merge_type = merge_replace
; merge_key = uid
; ; merge_values = item_id,uid,itemName,upperItemName,projectName,itemProperty,cde_element_category,llm_element_category,anno
; merge_values = uid,item_name,llm_element_std_1,llm_element_std_2,anno
; reset = False
;
; [stage_element_standard_anno_integration]
; class = AnnoIntegrationStage
; dataset = element_soucre_review_data_merge
; ; keep_fields = item_id,uid,itemName,upperItemName,projectName,itemProperty,cde_element_category,llm_element_category,anno
; keep_fields = uid,item_name,llm_element_std_1,llm_element_std_2,anno
; consistency_sample_rate = 0.1
; category_names = llm_element_std_1,llm_element_std_2
; save_res_path = /workspace/test_res/data_std/ernie/0506/合并流结果/merge_res_劳务费用项清单3_构件.xlsx