[DEFAULT]
workspace = /home/shilei/fbpmx/list_pricelib_relation/list_pricelib_relation_${date}

[project]
actions = generate, evaluate
datasets = pricelib_20250321
evaluators = pricelib_20250321_predict


[dataset_pricelib_20250321]
class = ReadExcelDataset
dir = /home/shilei/corpus/cost_split/分包指导价库汇总-20250321.xlsx


[dataset_pricelib_20250321_data]
class = MapDataset
input = pricelib_20250321
expression = exec('import re; import uuid') or {"item_id": uuid.uuid3(uuid.NAMESPACE_DNS, str(x["project_name"]) + "-" + str(x["uid"])).hex,
    "list_key": str(x["project_name"]) + "-" + str(x["uid"]),
    "item_name": x["caption"],
    "item_feature": x["spec"],
    "upper_item_name": x["full_name"],
    "pid": x["project_name"],
    "item_name_wk": f'清单名称: {x["caption"]}' if x["caption"] is not None else "",
    "item_feature_wk": f'清单特征: {x["spec"]}' if x["spec"] is not None else "",
    "upper_item_name_wk": f'全路径: {x["full_name"]}' if x["full_name"] is not None else ""
    }
keep_exists = True


[evaluator_pricelib_20250321_predict]
class = SimplePredictor
datasets = pricelib_20250321_data
models = gde_pricelib, gde_pricelib_rule
num_workers = 4


######################################

[model_gde_pricelib]
class = GDEPriceLibServiceModel
task_type = 清单
item_name_key = item_name
item_feature_key = item_feature
upper_item_name_key = upper_item_name
need_fields = item_name, item_feature, upper_item_name
re_predict = True

[model_gde_pricelib_rule]
class = GDEPriceLibRuleServiceModel
task_type = 清单
item_name_key = item_name
item_feature_key = item_feature
upper_item_name_key = upper_item_name
need_fields = item_name, item_feature, upper_item_name
re_predict = True