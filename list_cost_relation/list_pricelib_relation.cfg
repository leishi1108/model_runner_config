[DEFAULT]
workspace = /home/shilei/fbpmx/list_pricelib_relation/list_pricelib_relation_${date}

[project]
actions = generate, evaluate, run
datasets = pricelib_20250321
evaluators = pricelib_20250321_predict
stages = pricelib_20250321_data_export


[dataset_pricelib_20250321]
class = ReadExcelDataset
dir = /home/shilei/corpus/cost_split/分包指导价库汇总-20250321.xlsx


[dataset_pricelib_20250321_valid]
class = FilterDataset
input = pricelib_20250321
filters = "caption" in x and x["caption"] is not None


[dataset_pricelib_20250321_data]
class = MapDataset
input = pricelib_20250321_valid
expression = exec('import re; import uuid') or {"item_id": uuid.uuid3(uuid.NAMESPACE_DNS, str(x["project_name"]) + "-" + str(x["uid"])).hex,
    "list_key": str(x["project_name"]) + "-" + str(x["uid"]),
    "item_name": x["caption"],
    "item_feature": x["spec"],
    "upper_item_name": x["full_name"],
    "pid": x["project_name"],
    "item_name_wk": f'清单名称: {x["caption"]}' if x["caption"] is not None else "",
    "item_feature_wk": f'清单特征: {x["spec"]}' if x["spec"] is not None else "",
    "upper_item_name_wk": f'全路径: {x["full_name"]}' if x["full_name"] is not None else ""
    }
keep_exists = True


[evaluator_pricelib_20250321_predict]
class = SimplePredictor
datasets = pricelib_20250321_data
models = gde_pricelib, gde_pricelib_rule
num_workers = 2



[dataset_pricelib_20250321_data_for_export]
class = MapDataset
input = pricelib_20250321_data
expression = exec('import re; import uuid') or {
    "item_id": x["item_id"],
    "list_key": x["list_key"],
    "关键信息": "-".join(list(dict.fromkeys([ m[0] for m in [x["gde_pricelib_score"]["cost-partial"], x["gde_pricelib_score"]["element"], x["gde_pricelib_score"]["material"]] if len(m)==1])) ),
    "专业": ",".join(sorted(x["gde_pricelib_score"]["specialty_new"])),
    "成本分部分项": ",".join(sorted(x["gde_pricelib_score"]["cost-partial"])),
    "构件": ",".join(sorted(x["gde_pricelib_score"]["element"])),
    "构件属性": x["gde_pricelib_score"]["element_property"],
    "材料": ",".join(sorted(x["gde_pricelib_score"]["material"])),
    "材料属性": x["gde_pricelib_score"]["material_property"],
    }
extra_dependencies = evaluator_pricelib_20250321_predict
keep_exists = True


[stage_pricelib_20250321_data_export]
class = DatasetExportStage
dataset = pricelib_20250321_data_for_export
output_fields = pid, list_key, upper_item_name, item_name, item_feature, 关键信息, 专业, 成本分部分项, 构件, 构件属性, 材料, 材料属性
output_names = 工程id, 清单id, 上级名称, 清单名称, 清单特征, 关键信息, 专业, 成本分部分项, 构件, 构件属性, 材料, 材料属性
save_res_path = /home/shilei/fbpmx/list_pricelib_relation/list_pricelib_relation_${date}/pricelib_20250321_data_export_${date}.xlsx


######################################

[model_gde_pricelib]
class = GDEPriceLibServiceModel
task_type = 清单
item_name_key = item_name
item_feature_key = item_feature
upper_item_name_key = upper_item_name
need_fields = item_name, item_feature, upper_item_name

[model_gde_pricelib_rule]
class = GDEPriceLibRuleServiceModel
task_type = 清单
item_name_key = item_name
item_feature_key = item_feature
upper_item_name_key = upper_item_name
need_fields = item_name, item_feature, upper_item_name