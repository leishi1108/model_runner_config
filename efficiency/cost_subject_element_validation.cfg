[DEFAULT]
workspace = /home/shilei/fbpmx/cost_subject_cross_validation/cost_subject_cross_validation_${date}

[project]
actions = generate, evaluate
datasets = test, test_trans, test_valid, train, train_test, train_test_copy
evaluators = cde_predict, llm_predict_train_test_copy, llm_predict_train_test

[dataset_train]
class = ReadExcelDataset
dir = /home/shilei/corpus/cost_standard/要素库2.0材料构件工序机械标注数据.xlsx
header_row = 1
reset = False

[dataset_train_trans]
class = MapDataset
input = train
expression = exec('import re; import uuid') or {"sn": x["_index_"], "item_id": uuid.uuid4().hex , "item_name": x["任务名称"], "item_feature": x["上级项目"], "element_label": x["构件.1"], "material_label": x["材料.1"]}
keep_exists = True

[dataset_train_test]
class = FilterDataset
input = train_trans
filters = (int(x["sn"])  % 10 < 1) and (x["数据类型"] == "成本科目")

[dataset_train_test_copy]
class = FilterDataset
input = train_trans
filters = (int(x["sn"])  % 100 < 5) and (x["数据类型"] == "成本科目")

[evaluator_llm_predict_train_test_copy]
class = SimplePredictor
datasets = train_test_copy
models = llm_llama3_cost_element, llm_llama3_cost_material, llm_cost_element, llm_cost_material
; models = llm_cost_element
num_workers = 4


[evaluator_llm_predict_train_test]
class = SimplePredictor
datasets = train_test
models = llm_llama3_cost_element, llm_llama3_cost_material, llm_cost_element, llm_cost_material
num_workers = 4

[model_llm_cost_element]
class = LlmCostElementModel
item_name_key = item_name
item_feature_key = item_feature
need_fields = item_name, item_feature
re_predict = False

[model_llm_llama3_cost_element]
class = LlmLlama3CostElementModel
item_name_key = item_name
item_feature_key = item_feature
need_fields = item_name, item_feature
re_predict = False

[model_llm_cost_material]
class = LlmCostMaterialModel
item_name_key = item_name
item_feature_key = item_feature
need_fields = item_name, item_feature
re_predict = False

[model_llm_llama3_cost_material]
class = LlmLlama3CostMaterialModel
item_name_key = item_name
item_feature_key = item_feature
need_fields = item_name, item_feature
re_predict = False


[model_cde]
class = CdeServiceModel
task_type = 成本科目
item_name_key = item_name
item_feature_key = item_feature
need_fields = item_name,item_feature
qps = 50


[dataset_test]
class = ReadExcelDataset
dir = /home/shilei/corpus/cost_standard/20000条训练集.xlsx
reset = False

[dataset_test_trans]
class = MapDataset
input = test
expression = exec('import re; import uuid') or {"sn": x["Unnamed: 0"], "item_id": uuid.uuid4().hex , "item_name": x["major_content"], "item_feature": x["minor_content"]}
keep_exists = True

[dataset_test_valid]
class = FilterDataset
input = test_trans
filters = len(x["cde_score"]["cost-partial"]) > 0
extra_dependencies = evaluator_cde_predict


[evaluator_cde_predict]
class = SimplePredictor
datasets = test_trans
models = cde

[evaluator_llm_predict]
class = SimplePredictor
datasets = test_valid
models = llm_llama3_cost_element, llm_llama3_cost_material