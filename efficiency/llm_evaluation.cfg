[DEFAULT]
workspace = /home/shilei/fbpmx/efficiency/llm_evaluation_${date}

[project]
actions = generate, evaluate, run
datasets = partial_test_trans, partial_test_llmfail, partial_test_llm_merge
evaluators = llm_partial_predict, llm_partial_predict2, llm_element_predict
stages = partial_evaluate, goujian_evaluate

[dataset_partial_test]
class = ReadExcelDataset
dir = /home/shilei/corpus/efficiency/cde预测成本分部分项.xlsx
reset = False

[dataset_partial_test_trans]
class = MapDataset
input = partial_test
expression = exec('import re; import uuid') or {'item_id': uuid.uuid4().hex , "item_name": x["majorSentence"], "item_feature": x["minorSentence"], "task_type": "清单"}
keep_exists = True

[model_dsr1_partial]
class = LlmDsr1PartialModel
item_name_key = item_name
item_feature_key = item_feature
item_task_type_key = task_type
need_fields = item_name, item_feature, task_type
re_predict = False

[model_dsr1_partial2]
class = LlmDsr1PartialModel
item_name_key = item_name
item_feature_key = item_feature
item_task_type_key = task_type
need_fields = item_name, item_feature, task_type
re_predict = False

[evaluator_llm_partial_predict]
class = SimplePredictor
datasets = partial_test_trans
models = dsr1_partial

[dataset_partial_test_trans_res]
class = MapDataset
input = partial_test_trans
expression = {
    "index": x["index"],
    "task_type": x["task_type"],
    "majorSentence": x["majorSentence"],
    "minorSentence": x["minorSentence"],
    "label": x["label"],
    "dsr1分部分项": x["dsr1_partial_score"]["category"] if ("dsr1_partial_score" in x) and x["dsr1_partial_score"] is not None and x["dsr1_partial_score"]["chain_res"]!="请求失败" else None
    }
extra_dependencies = evaluator_llm_partial_predict
keep_exists = True

; {"_index_": 527, "dsr1_partial_score": {"category": "通信设备", "chain_res": "请求失败", "pure_llm_res": "请求失败"}}
; {"_index_": 25, "dsr1_partial_score": null}
[dataset_partial_test_llmfail]
class = FilterDataset
input = partial_test_trans
filters = ("dsr1_partial_score" in x) and (x["dsr1_partial_score"] is None or x["dsr1_partial_score"]["chain_res"]=="请求失败")
extra_dependencies = evaluator_llm_partial_predict

[evaluator_llm_partial_predict2]
class = SimplePredictor
datasets = partial_test_llmfail
models = dsr1_partial2

[dataset_partial_test_llmfail_res]
class = MapDataset
input = partial_test_llmfail
expression = {
    "index": x["index"],
    "task_type": x["task_type"],
    "majorSentence": x["majorSentence"],
    "minorSentence": x["minorSentence"],
    "label": x["label"],
    "dsr1分部分项": x["dsr1_partial2_score"]["category"] if ("dsr1_partial2_score" in x) and x["dsr1_partial2_score"] is not None and x["dsr1_partial2_score"]["chain_res"]!="请求失败" else None
    }
extra_dependencies = evaluator_llm_partial_predict2
keep_exists = True


[dataset_partial_test_llm_merge]
class = MergeIntoDataset
base_dataset = partial_test_trans_res
merge_datasets = partial_test_llmfail_res
merge_type = only_replace
merge_key = index
merge_values = dsr1分部分项
reset = False

[stage_partial_evaluate]
class = DatasetValStage
dataset = partial_test_llm_merge
output_fields = index, task_type, majorSentence, minorSentence, label, dsr1分部分项
output_names = index, task_type, majorSentence, minorSentence, label, dsr1分部分项
save_res_path = /home/shilei/fbpmx/efficiency/llm_evaluation_${date}/stage_partial_evaluate.xlsx
map_dict = {"dsr1分部分项":"label"}

############################################################################################

[dataset_goujian_test]
class = ReadExcelDataset
dir = /home/shilei/corpus/efficiency/0115-构件预测结果.xlsx
reset = False

[dataset_goujian_test_trans]
class = MapDataset
input = goujian_test
expression = exec('import re; import uuid') or {"item_name": x["labeled_text"], "item_feature": x["context"], "task_type": "清单"}
keep_exists = True

[model_dsr1_element]
class = LlmDsr1ElementStandardModel
item_name_key = item_name
item_feature_key = item_feature
item_task_type_key = task_type
need_fields = item_name, item_feature, task_type
re_predict = False

[evaluator_llm_element_predict]
class = SimplePredictor
datasets = goujian_test_trans
models = dsr1_element

[dataset_goujian_test_res]
class = MapDataset
input = goujian_test_trans
expression = {
    "index": x["index"],
    "task_type": x["task_type"],
    "labeled_text": x["labeled_text"],
    "context": x["context"],
    "label": x["label"],
    "dsr1构件": x["dsr1_element_score"]["category"] if ("dsr1_element_score" in x) and x["dsr1_element_score"] is not None and x["dsr1_element_score"]["chain_res"]!="请求失败" else None
    }
extra_dependencies = evaluator_llm_element_predict
keep_exists = True

[stage_goujian_evaluate]
class = DatasetValStage
dataset = goujian_test_res
output_fields = index, task_type, context, labeled_text, label, dsr1构件
output_names = index, task_type, context, labeled_text, label, dsr1构件
save_res_path = /home/shilei/fbpmx/efficiency/llm_evaluation_${date}/stage_goujian_evaluate.xlsx
map_dict = {"dsr1构件":"label"}