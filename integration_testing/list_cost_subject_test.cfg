[DEFAULT]
workspace = /home/shilei/fbpmx/integration_testing/list_cost_subject_test_${date}

[project]
actions = generate, evaluate
datasets = test_data
evaluators = test_data_predict


[dataset_raw_test_data]
class = ReadRawExcelDataset
dir = /home/shilei/corpus/integration_testing/清单算法-成本科目-发版验证
header_row = 1

[dataset_test_data_valid]
class = FilterDataset
input = raw_test_data
filters = ("ID.1" in x) and (x["ID.1"] is not None)

[dataset_test_data]
class = MapDataset
input = test_data_valid
expression = exec('import re; import uuid') or {"project_code": uuid.uuid3(uuid.NAMESPACE_DNS, str(x["filepath"]).split("/")[-1].split("-关系预期结果")[0]).hex,
    "project_id": str(x["filepath"]).split("/")[-1].split("-关系预期结果")[0],
    "list_key": str(x["filepath"]).split("/")[-1].split("-关系预期结果")[0] + "-" + str(x["ID"]),
    "item_name": x["清单名称"] if x["清单名称"] is not None else "",
    "item_feature": x["项目特征"] if x["项目特征"] is not None else "",
    "upper_item_name": x["全路径"] if x["全路径"] is not None else "",
    "project_name": x["工程名称"] if x["工程名称"] is not None else "",
  }
keep_exists = True


[model_cde]
class = CdeServiceModel
task_type = 清单
item_name_key = item_name
item_feature_key = item_feature
upper_item_name_key = upper_item_name
project_name_key = project_name
need_fields = item_name,item_feature,upper_item_name,project_name


[model_cde2]
class = CdeServiceModel
task_type = 清单
item_name_key = item_name
item_feature_key = item_feature
upper_item_name_key = upper_item_name
project_name_key = project_name
need_fields = item_name,item_feature,upper_item_name,project_name


[evaluator_test_data_predict]
class = SimplePredictor
datasets = test_data
models = cde
num_workers = 1

